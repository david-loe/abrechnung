{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"BaseCurrencyMoneyNotNull": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"BaseCurrencyMoney": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double",
						"nullable": true
					}
				},
				"required": [
					"amount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"mongoose.Types.ObjectId": {
				"type": "string"
			},
			"_id": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				],
				"pattern": "^[0-9a-fA-F]{24}$"
			},
			"Project__id_": {
				"properties": {
					"identifier": {
						"type": "string"
					},
					"organisation": {
						"$ref": "#/components/schemas/_id"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"name": {
						"type": "string"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"budget": {
						"$ref": "#/components/schemas/BaseCurrencyMoney"
					}
				},
				"required": [
					"identifier",
					"organisation",
					"_id",
					"balance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserProjects__id_": {
				"properties": {
					"assigned": {
						"items": {
							"$ref": "#/components/schemas/Project__id_"
						},
						"type": "array"
					},
					"supervised": {
						"items": {
							"$ref": "#/components/schemas/_id"
						},
						"type": "array"
					}
				},
				"required": [
					"assigned",
					"supervised"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Locale": {
				"type": "string",
				"enum": [
					"de",
					"en"
				]
			},
			"CurrencyCode": {
				"type": "string",
				"pattern": "^[A-Z]{3}$"
			},
			"Currency": {
				"properties": {
					"name": {
						"properties": {
							"en": {
								"type": "string"
							},
							"de": {
								"type": "string"
							}
						},
						"required": [
							"en",
							"de"
						],
						"type": "object"
					},
					"_id": {
						"$ref": "#/components/schemas/CurrencyCode"
					},
					"subunit": {
						"type": "string",
						"nullable": true
					},
					"symbol": {
						"type": "string",
						"nullable": true
					},
					"flag": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CountryCode": {
				"type": "string",
				"pattern": "^[A-Z]{2}$"
			},
			"CountrySimple": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/CountryCode"
					},
					"name": {
						"properties": {
							"en": {
								"type": "string"
							},
							"de": {
								"type": "string"
							}
						},
						"required": [
							"en",
							"de"
						],
						"type": "object"
					},
					"needsA1Certificate": {
						"type": "boolean",
						"nullable": true
					},
					"alias": {
						"properties": {
							"en": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"de": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"de"
						],
						"type": "object"
					},
					"flag": {
						"type": "string",
						"nullable": true
					},
					"currency": {
						"allOf": [
							{
								"$ref": "#/components/schemas/CurrencyCode"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"_id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HealthInsurance__id_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"name",
					"email",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrganisationSimple__id_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Binary": {
				"type": "string",
				"description": "A class representation of the BSON Binary type."
			},
			"buffer.Blob": {
				"description": "The **`Blob`** interface represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)\n`Blob` class is a global reference for `import { Blob } from 'node:buffer'`\nhttps://nodejs.org/api/buffer.html#class-blob\nThe **`Blob`** interface represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob)\n`Blob` class is a global reference for `import { Blob } from 'node:buffer'`\nhttps://nodejs.org/api/buffer.html#class-blob",
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"binary": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/Binary"
					},
					{
						"$ref": "#/components/schemas/buffer.Blob"
					}
				]
			},
			"DocumentFileType": {
				"type": "string",
				"enum": [
					"application/pdf",
					"image/jpeg",
					"image/png"
				]
			},
			"DocumentFile__id.binary_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/binary"
					},
					"owner": {
						"$ref": "#/components/schemas/_id"
					},
					"type": {
						"$ref": "#/components/schemas/DocumentFileType"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"data",
					"owner",
					"type",
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Token__id.binary_": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"expireAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"files": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile__id.binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"_id",
					"expireAt",
					"files"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Name": {
				"properties": {
					"givenName": {
						"type": "string"
					},
					"familyName": {
						"type": "string"
					}
				},
				"required": [
					"givenName",
					"familyName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User__id.binary_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"$ref": "#/components/schemas/Name"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"fk": {
						"properties": {
							"httpBearer": {
								"type": "string",
								"nullable": true
							},
							"oidc": {
								"type": "string",
								"nullable": true
							},
							"magiclogin": {
								"type": "string",
								"nullable": true
							},
							"ldapauth": {
								"type": "string",
								"nullable": true
							},
							"microsoft": {
								"type": "string",
								"nullable": true
							}
						},
						"type": "object"
					},
					"access": {
						"properties": {
							"user": {
								"type": "boolean"
							},
							"inWork:expenseReport": {
								"type": "boolean"
							},
							"inWork:healthCareCost": {
								"type": "boolean"
							},
							"appliedFor:advance": {
								"type": "boolean"
							},
							"appliedFor:travel": {
								"type": "boolean"
							},
							"approved:travel": {
								"type": "boolean"
							},
							"approve/advance": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"book/advance": {
								"type": "boolean"
							},
							"book/travel": {
								"type": "boolean"
							},
							"book/expenseReport": {
								"type": "boolean"
							},
							"book/healthCareCost": {
								"type": "boolean"
							},
							"admin": {
								"type": "boolean"
							}
						},
						"required": [
							"user",
							"inWork:expenseReport",
							"inWork:healthCareCost",
							"appliedFor:advance",
							"appliedFor:travel",
							"approved:travel",
							"approve/advance",
							"approve/travel",
							"examine/travel",
							"examine/expenseReport",
							"examine/healthCareCost",
							"book/advance",
							"book/travel",
							"book/expenseReport",
							"book/healthCareCost",
							"admin"
						],
						"type": "object"
					},
					"projects": {
						"$ref": "#/components/schemas/UserProjects__id_"
					},
					"loseAccessAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"settings": {
						"properties": {
							"showInstallBanner": {
								"type": "boolean"
							},
							"organisation": {
								"allOf": [
									{
										"$ref": "#/components/schemas/OrganisationSimple__id_"
									}
								],
								"nullable": true
							},
							"insurance": {
								"allOf": [
									{
										"$ref": "#/components/schemas/HealthInsurance__id_"
									}
								],
								"nullable": true
							},
							"lastCountries": {
								"items": {
									"$ref": "#/components/schemas/CountrySimple"
								},
								"type": "array"
							},
							"lastCurrencies": {
								"items": {
									"$ref": "#/components/schemas/Currency"
								},
								"type": "array"
							},
							"hasUserSetLanguage": {
								"type": "boolean"
							},
							"language": {
								"$ref": "#/components/schemas/Locale"
							}
						},
						"required": [
							"showInstallBanner",
							"lastCountries",
							"lastCurrencies",
							"hasUserSetLanguage",
							"language"
						],
						"type": "object"
					},
					"vehicleRegistration": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile__id.binary_"
						},
						"type": "array",
						"nullable": true
					},
					"token": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Token__id.binary_"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"email",
					"name",
					"_id",
					"fk",
					"access",
					"projects",
					"settings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NativeDate": {
				"type": "string"
			},
			"IdDocument_string_": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"properties": {
							"_id": {
								"type": "string"
							}
						},
						"required": [
							"_id"
						],
						"type": "object"
					}
				]
			},
			"IdDocument__id_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/_id"
					},
					{
						"properties": {
							"_id": {
								"$ref": "#/components/schemas/_id"
							}
						},
						"required": [
							"_id"
						],
						"type": "object"
					}
				]
			},
			"SetterPartial_IUser-at-settings.NoPost_": {
				"properties": {
					"showInstallBanner": {
						"type": "boolean"
					},
					"organisation": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IdDocument__id_"
							},
							{
								"$ref": "#/components/schemas/OrganisationSimple__id_"
							}
						]
					},
					"insurance": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/HealthInsurance__id_"
							},
							{
								"$ref": "#/components/schemas/IdDocument__id_"
							}
						]
					},
					"lastCountries": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/IdDocument_string_"
								},
								"type": "array"
							},
							{
								"items": {
									"properties": {
										"currency": {
											"type": "string"
										},
										"needsA1Certificate": {
											"type": "boolean"
										},
										"flag": {
											"type": "string"
										},
										"alias": {
											"properties": {
												"en": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"de": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"type": "object"
										},
										"name": {
											"properties": {
												"en": {
													"type": "string"
												},
												"de": {
													"type": "string"
												}
											},
											"type": "object"
										},
										"_id": {
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						]
					},
					"lastCurrencies": {
						"anyOf": [
							{
								"items": {
									"properties": {
										"flag": {
											"type": "string"
										},
										"subunit": {
											"type": "string"
										},
										"name": {
											"properties": {
												"en": {
													"type": "string"
												},
												"de": {
													"type": "string"
												}
											},
											"type": "object"
										},
										"_id": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/IdDocument_string_"
								},
								"type": "array"
							}
						]
					},
					"hasUserSetLanguage": {
						"type": "boolean"
					},
					"language": {
						"type": "string",
						"enum": [
							"de",
							"en"
						]
					}
				},
				"type": "object"
			},
			"SetterBody_IUser-at-settings_": {
				"$ref": "#/components/schemas/SetterPartial_IUser-at-settings.NoPost_"
			},
			"File": {
				"properties": {
					"data": {
						"type": "string",
						"format": "binary"
					},
					"type": {
						"$ref": "#/components/schemas/DocumentFileType"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"type": "string"
					}
				},
				"required": [
					"type",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PushSubscription": {
				"description": "Configuration for a Push Subscription. This can be obtained on the frontend by calling\nserviceWorkerRegistration.pushManager.subscribe().\nThe expected format is the same output as JSON.stringify'ing a PushSubscription in the browser.",
				"properties": {
					"endpoint": {
						"type": "string"
					},
					"expirationTime": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"keys": {
						"properties": {
							"auth": {
								"type": "string"
							},
							"p256dh": {
								"type": "string"
							}
						},
						"required": [
							"auth",
							"p256dh"
						],
						"type": "object"
					}
				},
				"required": [
					"endpoint",
					"keys"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Meta": {
				"properties": {
					"count": {
						"type": "number",
						"format": "double"
					},
					"page": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					},
					"countPages": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"count",
					"page",
					"limit",
					"countPages"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_User__id.binary_-or-User__id.binary_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/User__id.binary_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/User__id.binary_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUser": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"$ref": "#/components/schemas/Name"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"fk": {
						"properties": {
							"httpBearer": {
								"type": "string",
								"nullable": true
							},
							"oidc": {
								"type": "string",
								"nullable": true
							},
							"magiclogin": {
								"type": "string",
								"nullable": true
							},
							"ldapauth": {
								"type": "string",
								"nullable": true
							},
							"microsoft": {
								"type": "string",
								"nullable": true
							}
						},
						"type": "object"
					},
					"access": {
						"properties": {
							"user": {
								"type": "boolean"
							},
							"inWork:expenseReport": {
								"type": "boolean"
							},
							"inWork:healthCareCost": {
								"type": "boolean"
							},
							"appliedFor:advance": {
								"type": "boolean"
							},
							"appliedFor:travel": {
								"type": "boolean"
							},
							"approved:travel": {
								"type": "boolean"
							},
							"approve/advance": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"book/advance": {
								"type": "boolean"
							},
							"book/travel": {
								"type": "boolean"
							},
							"book/expenseReport": {
								"type": "boolean"
							},
							"book/healthCareCost": {
								"type": "boolean"
							},
							"admin": {
								"type": "boolean"
							}
						},
						"required": [
							"user",
							"inWork:expenseReport",
							"inWork:healthCareCost",
							"appliedFor:advance",
							"appliedFor:travel",
							"approved:travel",
							"approve/advance",
							"approve/travel",
							"examine/travel",
							"examine/expenseReport",
							"examine/healthCareCost",
							"book/advance",
							"book/travel",
							"book/expenseReport",
							"book/healthCareCost",
							"admin"
						],
						"type": "object"
					},
					"projects": {
						"$ref": "#/components/schemas/UserProjects__id_"
					},
					"loseAccessAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"settings": {
						"properties": {
							"showInstallBanner": {
								"type": "boolean"
							},
							"organisation": {
								"allOf": [
									{
										"$ref": "#/components/schemas/OrganisationSimple__id_"
									}
								],
								"nullable": true
							},
							"insurance": {
								"allOf": [
									{
										"$ref": "#/components/schemas/HealthInsurance__id_"
									}
								],
								"nullable": true
							},
							"lastCountries": {
								"items": {
									"$ref": "#/components/schemas/CountrySimple"
								},
								"type": "array"
							},
							"lastCurrencies": {
								"items": {
									"$ref": "#/components/schemas/Currency"
								},
								"type": "array"
							},
							"hasUserSetLanguage": {
								"type": "boolean"
							},
							"language": {
								"$ref": "#/components/schemas/Locale"
							}
						},
						"required": [
							"showInstallBanner",
							"lastCountries",
							"lastCurrencies",
							"hasUserSetLanguage",
							"language"
						],
						"type": "object"
					},
					"vehicleRegistration": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile__id.binary_"
						},
						"type": "array",
						"nullable": true
					},
					"token": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Token__id.binary_"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"email",
					"name",
					"_id",
					"fk",
					"access",
					"projects",
					"settings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_IUser_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"email",
								"name",
								"_id",
								"fk",
								"access",
								"projects",
								"loseAccessAt",
								"settings",
								"vehicleRegistration",
								"token"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DocumentFile_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/Binary"
					},
					"owner": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"type": {
						"$ref": "#/components/schemas/DocumentFileType"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"data",
					"owner",
					"type",
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Token_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"expireAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"files": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile_mongoose.Types.ObjectId.Binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"_id",
					"expireAt",
					"files"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IdDocument_mongoose.Types.ObjectId_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					{
						"properties": {
							"_id": {
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						},
						"required": [
							"_id"
						],
						"type": "object"
					}
				]
			},
			"HealthInsurance_mongoose.Types.ObjectId_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"name",
					"email",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrganisationSimple_mongoose.Types.ObjectId_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_IUser_mongoose.Types.ObjectId.Binary_.NoPost_": {
				"properties": {
					"vehicleRegistration": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
								},
								"type": "array"
							},
							{
								"items": {
									"properties": {
										"data": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"$ref": "#/components/schemas/Binary"
												}
											]
										},
										"name": {
											"type": "string"
										},
										"type": {
											"type": "string",
											"enum": [
												"application/pdf",
												"image/jpeg",
												"image/png"
											]
										},
										"_id": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"$ref": "#/components/schemas/mongoose.Types.ObjectId"
												}
											]
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						]
					},
					"loseAccessAt": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					},
					"projects": {
						"properties": {
							"supervised": {
								"anyOf": [
									{
										"items": {
											"$ref": "#/components/schemas/mongoose.Types.ObjectId"
										},
										"type": "array"
									},
									{
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								]
							},
							"assigned": {
								"anyOf": [
									{
										"items": {
											"properties": {
												"identifier": {
													"type": "string"
												},
												"budget": {
													"properties": {
														"amount": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												},
												"balance": {
													"properties": {
														"amount": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												},
												"organisation": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/mongoose.Types.ObjectId"
														}
													]
												},
												"name": {
													"type": "string"
												},
												"_id": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/mongoose.Types.ObjectId"
														}
													]
												}
											},
											"type": "object"
										},
										"type": "array"
									},
									{
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									}
								]
							}
						},
						"type": "object"
					},
					"access": {
						"properties": {
							"admin": {
								"type": "boolean"
							},
							"book/healthCareCost": {
								"type": "boolean"
							},
							"book/expenseReport": {
								"type": "boolean"
							},
							"book/travel": {
								"type": "boolean"
							},
							"book/advance": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"approve/advance": {
								"type": "boolean"
							},
							"approved:travel": {
								"type": "boolean"
							},
							"appliedFor:travel": {
								"type": "boolean"
							},
							"appliedFor:advance": {
								"type": "boolean"
							},
							"inWork:healthCareCost": {
								"type": "boolean"
							},
							"inWork:expenseReport": {
								"type": "boolean"
							},
							"user": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					"fk": {
						"properties": {
							"httpBearer": {
								"type": "string"
							},
							"oidc": {
								"type": "string"
							},
							"magiclogin": {
								"type": "string"
							},
							"ldapauth": {
								"type": "string"
							},
							"microsoft": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"email": {
						"type": "string"
					},
					"settings": {
						"properties": {
							"showInstallBanner": {
								"type": "boolean"
							},
							"organisation": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/OrganisationSimple_mongoose.Types.ObjectId_"
									},
									{
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								]
							},
							"insurance": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/HealthInsurance_mongoose.Types.ObjectId_"
									},
									{
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								]
							},
							"lastCountries": {
								"anyOf": [
									{
										"items": {
											"$ref": "#/components/schemas/IdDocument_string_"
										},
										"type": "array"
									},
									{
										"items": {
											"properties": {
												"currency": {
													"type": "string"
												},
												"needsA1Certificate": {
													"type": "boolean"
												},
												"flag": {
													"type": "string"
												},
												"alias": {
													"properties": {
														"en": {
															"items": {
																"type": "string"
															},
															"type": "array"
														},
														"de": {
															"items": {
																"type": "string"
															},
															"type": "array"
														}
													},
													"type": "object"
												},
												"name": {
													"properties": {
														"en": {
															"type": "string"
														},
														"de": {
															"type": "string"
														}
													},
													"type": "object"
												},
												"_id": {
													"type": "string"
												}
											},
											"type": "object"
										},
										"type": "array"
									}
								]
							},
							"lastCurrencies": {
								"anyOf": [
									{
										"items": {
											"properties": {
												"flag": {
													"type": "string"
												},
												"subunit": {
													"type": "string"
												},
												"name": {
													"properties": {
														"en": {
															"type": "string"
														},
														"de": {
															"type": "string"
														}
													},
													"type": "object"
												},
												"_id": {
													"type": "string"
												},
												"symbol": {
													"type": "string"
												}
											},
											"type": "object"
										},
										"type": "array"
									},
									{
										"items": {
											"$ref": "#/components/schemas/IdDocument_string_"
										},
										"type": "array"
									}
								]
							},
							"hasUserSetLanguage": {
								"type": "boolean"
							},
							"language": {
								"type": "string",
								"enum": [
									"de",
									"en"
								]
							}
						},
						"type": "object"
					},
					"name": {
						"properties": {
							"familyName": {
								"type": "string"
							},
							"givenName": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					},
					"token": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Token_mongoose.Types.ObjectId.Binary_"
							},
							{
								"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBodyUser": {
				"properties": {
					"vehicleRegistration": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
								},
								"type": "array"
							},
							{
								"items": {
									"properties": {
										"data": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"$ref": "#/components/schemas/Binary"
												}
											]
										},
										"name": {
											"type": "string"
										},
										"type": {
											"type": "string",
											"enum": [
												"application/pdf",
												"image/jpeg",
												"image/png"
											]
										},
										"_id": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"$ref": "#/components/schemas/mongoose.Types.ObjectId"
												}
											]
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						]
					},
					"loseAccessAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"projects": {
						"properties": {
							"supervised": {
								"anyOf": [
									{
										"items": {
											"$ref": "#/components/schemas/mongoose.Types.ObjectId"
										},
										"type": "array"
									},
									{
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								]
							},
							"assigned": {
								"anyOf": [
									{
										"items": {
											"properties": {
												"identifier": {
													"type": "string"
												},
												"budget": {
													"properties": {
														"amount": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												},
												"balance": {
													"properties": {
														"amount": {
															"type": "number",
															"format": "double"
														}
													},
													"type": "object"
												},
												"organisation": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/mongoose.Types.ObjectId"
														}
													]
												},
												"name": {
													"type": "string"
												},
												"_id": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/mongoose.Types.ObjectId"
														}
													]
												}
											},
											"type": "object"
										},
										"type": "array"
									},
									{
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									}
								]
							}
						},
						"type": "object"
					},
					"access": {
						"properties": {
							"admin": {
								"type": "boolean"
							},
							"book/healthCareCost": {
								"type": "boolean"
							},
							"book/expenseReport": {
								"type": "boolean"
							},
							"book/travel": {
								"type": "boolean"
							},
							"book/advance": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"approve/advance": {
								"type": "boolean"
							},
							"approved:travel": {
								"type": "boolean"
							},
							"appliedFor:travel": {
								"type": "boolean"
							},
							"appliedFor:advance": {
								"type": "boolean"
							},
							"inWork:healthCareCost": {
								"type": "boolean"
							},
							"inWork:expenseReport": {
								"type": "boolean"
							},
							"user": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					"fk": {
						"properties": {
							"httpBearer": {
								"type": "string"
							},
							"oidc": {
								"type": "string"
							},
							"magiclogin": {
								"type": "string"
							},
							"ldapauth": {
								"type": "string"
							},
							"microsoft": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"email": {
						"type": "string"
					},
					"settings": {
						"properties": {
							"showInstallBanner": {
								"type": "boolean"
							},
							"organisation": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/OrganisationSimple_mongoose.Types.ObjectId_"
									},
									{
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								]
							},
							"insurance": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/HealthInsurance_mongoose.Types.ObjectId_"
									},
									{
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								]
							},
							"lastCountries": {
								"anyOf": [
									{
										"items": {
											"$ref": "#/components/schemas/IdDocument_string_"
										},
										"type": "array"
									},
									{
										"items": {
											"properties": {
												"currency": {
													"type": "string"
												},
												"needsA1Certificate": {
													"type": "boolean"
												},
												"flag": {
													"type": "string"
												},
												"alias": {
													"properties": {
														"en": {
															"items": {
																"type": "string"
															},
															"type": "array"
														},
														"de": {
															"items": {
																"type": "string"
															},
															"type": "array"
														}
													},
													"type": "object"
												},
												"name": {
													"properties": {
														"en": {
															"type": "string"
														},
														"de": {
															"type": "string"
														}
													},
													"type": "object"
												},
												"_id": {
													"type": "string"
												}
											},
											"type": "object"
										},
										"type": "array"
									}
								]
							},
							"lastCurrencies": {
								"anyOf": [
									{
										"items": {
											"properties": {
												"flag": {
													"type": "string"
												},
												"subunit": {
													"type": "string"
												},
												"name": {
													"properties": {
														"en": {
															"type": "string"
														},
														"de": {
															"type": "string"
														}
													},
													"type": "object"
												},
												"_id": {
													"type": "string"
												},
												"symbol": {
													"type": "string"
												}
											},
											"type": "object"
										},
										"type": "array"
									},
									{
										"items": {
											"$ref": "#/components/schemas/IdDocument_string_"
										},
										"type": "array"
									}
								]
							},
							"hasUserSetLanguage": {
								"type": "boolean"
							},
							"language": {
								"type": "string",
								"enum": [
									"de",
									"en"
								]
							}
						},
						"type": "object"
					},
					"name": {
						"properties": {
							"familyName": {
								"type": "string"
							},
							"givenName": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					},
					"token": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Token_mongoose.Types.ObjectId.Binary_"
							},
							{
								"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IdDocument": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/_id"
					},
					{
						"properties": {
							"_id": {
								"$ref": "#/components/schemas/_id"
							}
						},
						"required": [
							"_id"
						],
						"type": "object"
					}
				]
			},
			"DeleteResult": {
				"properties": {
					"acknowledged": {
						"type": "boolean",
						"description": "Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined."
					},
					"deletedCount": {
						"type": "number",
						"format": "double",
						"description": "The number of documents that were deleted"
					}
				},
				"required": [
					"acknowledged",
					"deletedCount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserReplaceReferencesResult": {
				"properties": {
					"travels": {
						"properties": {
							"modifiedCount": {
								"type": "number",
								"format": "double"
							},
							"matchedCount": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"modifiedCount",
							"matchedCount"
						],
						"type": "object"
					},
					"expensereports": {
						"properties": {
							"modifiedCount": {
								"type": "number",
								"format": "double"
							},
							"matchedCount": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"modifiedCount",
							"matchedCount"
						],
						"type": "object"
					},
					"healthcarecosts": {
						"properties": {
							"modifiedCount": {
								"type": "number",
								"format": "double"
							},
							"matchedCount": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"modifiedCount",
							"matchedCount"
						],
						"type": "object"
					},
					"documentfiles": {
						"properties": {
							"modifiedCount": {
								"type": "number",
								"format": "double"
							},
							"matchedCount": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"modifiedCount",
							"matchedCount"
						],
						"type": "object"
					}
				},
				"type": "object"
			},
			"DefaultLastPlaceOfWorkSetting": {
				"type": "string",
				"enum": [
					"destinationPlace",
					"lastEndLocation"
				]
			},
			"TravelSettings__id_": {
				"properties": {
					"maxTravelDayCount": {
						"type": "number",
						"format": "double"
					},
					"allowSpouseRefund": {
						"type": "boolean"
					},
					"allowTravelApplicationForThePast": {
						"type": "boolean"
					},
					"toleranceStageDatesToApprovedTravelDates": {
						"type": "number",
						"format": "double"
					},
					"distanceRefunds": {
						"properties": {
							"car": {
								"type": "number",
								"format": "double"
							},
							"motorcycle": {
								"type": "number",
								"format": "double"
							},
							"halfCar": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"car",
							"motorcycle",
							"halfCar"
						],
						"type": "object"
					},
					"vehicleRegistrationWhenUsingOwnCar": {
						"type": "string",
						"enum": [
							"required",
							"optional",
							"none"
						]
					},
					"defaultLastPlaceOfWork": {
						"$ref": "#/components/schemas/DefaultLastPlaceOfWorkSetting"
					},
					"lumpSumCut": {
						"properties": {
							"breakfast": {
								"type": "number",
								"format": "double"
							},
							"lunch": {
								"type": "number",
								"format": "double"
							},
							"dinner": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"breakfast",
							"lunch",
							"dinner"
						],
						"type": "object"
					},
					"factorCateringLumpSum": {
						"type": "number",
						"format": "double"
					},
					"factorCateringLumpSumExceptions": {
						"items": {
							"$ref": "#/components/schemas/CountryCode"
						},
						"type": "array"
					},
					"factorOvernightLumpSum": {
						"type": "number",
						"format": "double"
					},
					"factorOvernightLumpSumExceptions": {
						"items": {
							"$ref": "#/components/schemas/CountryCode"
						},
						"type": "array"
					},
					"fallbackLumpSumCountry": {
						"$ref": "#/components/schemas/CountryCode"
					},
					"secondNightOnAirplaneLumpSumCountry": {
						"$ref": "#/components/schemas/CountryCode"
					},
					"secondNightOnShipOrFerryLumpSumCountry": {
						"$ref": "#/components/schemas/CountryCode"
					},
					"minHoursOfTravel": {
						"type": "number",
						"format": "double"
					},
					"minProfessionalShare": {
						"type": "number",
						"format": "double"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"maxTravelDayCount",
					"allowSpouseRefund",
					"allowTravelApplicationForThePast",
					"toleranceStageDatesToApprovedTravelDates",
					"distanceRefunds",
					"vehicleRegistrationWhenUsingOwnCar",
					"defaultLastPlaceOfWork",
					"lumpSumCut",
					"factorCateringLumpSum",
					"factorCateringLumpSumExceptions",
					"factorOvernightLumpSum",
					"factorOvernightLumpSumExceptions",
					"fallbackLumpSumCountry",
					"secondNightOnAirplaneLumpSumCountry",
					"secondNightOnShipOrFerryLumpSumCountry",
					"minHoursOfTravel",
					"minProfessionalShare",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TravelSettings_mongoose.Types.ObjectId_": {
				"properties": {
					"maxTravelDayCount": {
						"type": "number",
						"format": "double"
					},
					"allowSpouseRefund": {
						"type": "boolean"
					},
					"allowTravelApplicationForThePast": {
						"type": "boolean"
					},
					"toleranceStageDatesToApprovedTravelDates": {
						"type": "number",
						"format": "double"
					},
					"distanceRefunds": {
						"properties": {
							"car": {
								"type": "number",
								"format": "double"
							},
							"motorcycle": {
								"type": "number",
								"format": "double"
							},
							"halfCar": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"car",
							"motorcycle",
							"halfCar"
						],
						"type": "object"
					},
					"vehicleRegistrationWhenUsingOwnCar": {
						"type": "string",
						"enum": [
							"required",
							"optional",
							"none"
						]
					},
					"defaultLastPlaceOfWork": {
						"$ref": "#/components/schemas/DefaultLastPlaceOfWorkSetting"
					},
					"lumpSumCut": {
						"properties": {
							"breakfast": {
								"type": "number",
								"format": "double"
							},
							"lunch": {
								"type": "number",
								"format": "double"
							},
							"dinner": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"breakfast",
							"lunch",
							"dinner"
						],
						"type": "object"
					},
					"factorCateringLumpSum": {
						"type": "number",
						"format": "double"
					},
					"factorCateringLumpSumExceptions": {
						"items": {
							"$ref": "#/components/schemas/CountryCode"
						},
						"type": "array"
					},
					"factorOvernightLumpSum": {
						"type": "number",
						"format": "double"
					},
					"factorOvernightLumpSumExceptions": {
						"items": {
							"$ref": "#/components/schemas/CountryCode"
						},
						"type": "array"
					},
					"fallbackLumpSumCountry": {
						"$ref": "#/components/schemas/CountryCode"
					},
					"secondNightOnAirplaneLumpSumCountry": {
						"$ref": "#/components/schemas/CountryCode"
					},
					"secondNightOnShipOrFerryLumpSumCountry": {
						"$ref": "#/components/schemas/CountryCode"
					},
					"minHoursOfTravel": {
						"type": "number",
						"format": "double"
					},
					"minProfessionalShare": {
						"type": "number",
						"format": "double"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"maxTravelDayCount",
					"allowSpouseRefund",
					"allowTravelApplicationForThePast",
					"toleranceStageDatesToApprovedTravelDates",
					"distanceRefunds",
					"vehicleRegistrationWhenUsingOwnCar",
					"defaultLastPlaceOfWork",
					"lumpSumCut",
					"factorCateringLumpSum",
					"factorCateringLumpSumExceptions",
					"factorOvernightLumpSum",
					"factorOvernightLumpSumExceptions",
					"fallbackLumpSumCountry",
					"secondNightOnAirplaneLumpSumCountry",
					"secondNightOnShipOrFerryLumpSumCountry",
					"minHoursOfTravel",
					"minProfessionalShare",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_ITravelSettings_mongoose.Types.ObjectId_.NoPost_": {
				"properties": {
					"minProfessionalShare": {
						"type": "number",
						"format": "double"
					},
					"minHoursOfTravel": {
						"type": "number",
						"format": "double"
					},
					"secondNightOnShipOrFerryLumpSumCountry": {
						"type": "string"
					},
					"secondNightOnAirplaneLumpSumCountry": {
						"type": "string"
					},
					"fallbackLumpSumCountry": {
						"type": "string"
					},
					"factorOvernightLumpSumExceptions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"factorOvernightLumpSum": {
						"type": "number",
						"format": "double"
					},
					"factorCateringLumpSumExceptions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"factorCateringLumpSum": {
						"type": "number",
						"format": "double"
					},
					"lumpSumCut": {
						"properties": {
							"dinner": {
								"type": "number",
								"format": "double"
							},
							"lunch": {
								"type": "number",
								"format": "double"
							},
							"breakfast": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"defaultLastPlaceOfWork": {
						"type": "string",
						"enum": [
							"destinationPlace",
							"lastEndLocation"
						]
					},
					"vehicleRegistrationWhenUsingOwnCar": {
						"type": "string",
						"enum": [
							"required",
							"optional",
							"none"
						]
					},
					"distanceRefunds": {
						"properties": {
							"halfCar": {
								"type": "number",
								"format": "double"
							},
							"motorcycle": {
								"type": "number",
								"format": "double"
							},
							"car": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"toleranceStageDatesToApprovedTravelDates": {
						"type": "number",
						"format": "double"
					},
					"allowTravelApplicationForThePast": {
						"type": "boolean"
					},
					"allowSpouseRefund": {
						"type": "boolean"
					},
					"maxTravelDayCount": {
						"type": "number",
						"format": "double"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_ITravelSettings_mongoose.Types.ObjectId__": {
				"$ref": "#/components/schemas/SetterPartial_ITravelSettings_mongoose.Types.ObjectId_.NoPost_"
			},
			"Pick_Place.Exclude_keyofPlace.place__": {
				"properties": {
					"special": {
						"type": "string"
					},
					"country": {
						"$ref": "#/components/schemas/CountrySimple"
					}
				},
				"required": [
					"country"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Place.place_": {
				"$ref": "#/components/schemas/Pick_Place.Exclude_keyofPlace.place__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Place": {
				"properties": {
					"place": {
						"type": "string"
					},
					"country": {
						"$ref": "#/components/schemas/CountrySimple"
					},
					"special": {
						"type": "string"
					}
				},
				"required": [
					"place",
					"country"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DistanceRefundType": {
				"type": "string",
				"enum": [
					"car",
					"motorcycle",
					"halfCar"
				]
			},
			"Transport": {
				"anyOf": [
					{
						"properties": {
							"type": {
								"type": "string",
								"enum": [
									"airplane",
									"shipOrFerry",
									"otherTransport"
								]
							}
						},
						"required": [
							"type"
						],
						"type": "object"
					},
					{
						"properties": {
							"distanceRefundType": {
								"$ref": "#/components/schemas/DistanceRefundType"
							},
							"distance": {
								"type": "number",
								"format": "double"
							},
							"type": {
								"type": "string",
								"enum": [
									"ownCar"
								],
								"nullable": false
							}
						},
						"required": [
							"distanceRefundType",
							"distance",
							"type"
						],
						"type": "object"
					}
				]
			},
			"Cost__id.binary_": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"currency": {
						"$ref": "#/components/schemas/Currency"
					},
					"exchangeRate": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							},
							"rate": {
								"type": "number",
								"format": "double"
							},
							"date": {
								"anyOf": [
									{
										"type": "string",
										"format": "date-time"
									},
									{
										"type": "string"
									}
								]
							}
						},
						"required": [
							"amount",
							"rate",
							"date"
						],
						"type": "object",
						"nullable": true
					},
					"receipts": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile__id.binary_"
						},
						"type": "array"
					},
					"date": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"required": [
					"amount",
					"currency",
					"receipts",
					"date"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PurposeSimple": {
				"type": "string",
				"enum": [
					"professional",
					"private"
				]
			},
			"Purpose": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/PurposeSimple"
					},
					{
						"type": "string",
						"enum": [
							"mixed"
						]
					}
				]
			},
			"ProjectSimple__id_": {
				"properties": {
					"identifier": {
						"type": "string"
					},
					"organisation": {
						"$ref": "#/components/schemas/_id"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"identifier",
					"organisation",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Stage__id.binary_": {
				"properties": {
					"departure": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"arrival": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"startLocation": {
						"$ref": "#/components/schemas/Place"
					},
					"endLocation": {
						"$ref": "#/components/schemas/Place"
					},
					"midnightCountries": {
						"items": {
							"properties": {
								"country": {
									"$ref": "#/components/schemas/CountrySimple"
								},
								"date": {
									"anyOf": [
										{
											"type": "string",
											"format": "date-time"
										},
										{
											"type": "string"
										}
									]
								}
							},
							"required": [
								"country",
								"date"
							],
							"type": "object"
						},
						"type": "array",
						"nullable": true
					},
					"transport": {
						"$ref": "#/components/schemas/Transport"
					},
					"cost": {
						"$ref": "#/components/schemas/Cost__id.binary_"
					},
					"purpose": {
						"$ref": "#/components/schemas/Purpose"
					},
					"project": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple__id_"
							}
						],
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"departure",
					"arrival",
					"startLocation",
					"endLocation",
					"transport",
					"cost",
					"purpose",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TravelExpense__id.binary_": {
				"properties": {
					"description": {
						"type": "string"
					},
					"cost": {
						"$ref": "#/components/schemas/Cost__id.binary_"
					},
					"project": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple__id_"
							}
						],
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"purpose": {
						"type": "string",
						"enum": [
							"professional",
							"mixed"
						]
					}
				},
				"required": [
					"description",
					"cost",
					"_id",
					"purpose"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CateringType": {
				"type": "string",
				"enum": [
					"catering8",
					"catering24"
				]
			},
			"TravelDay__id_": {
				"properties": {
					"date": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"country": {
						"$ref": "#/components/schemas/CountrySimple"
					},
					"special": {
						"type": "string"
					},
					"cateringRefund": {
						"properties": {
							"breakfast": {
								"type": "boolean"
							},
							"lunch": {
								"type": "boolean"
							},
							"dinner": {
								"type": "boolean"
							}
						},
						"required": [
							"breakfast",
							"lunch",
							"dinner"
						],
						"type": "object"
					},
					"overnightRefund": {
						"type": "boolean"
					},
					"purpose": {
						"$ref": "#/components/schemas/PurposeSimple"
					},
					"lumpSums": {
						"properties": {
							"catering": {
								"properties": {
									"type": {
										"$ref": "#/components/schemas/CateringType"
									},
									"refund": {
										"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
									}
								},
								"required": [
									"type",
									"refund"
								],
								"type": "object"
							},
							"overnight": {
								"properties": {
									"refund": {
										"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
									}
								},
								"required": [
									"refund"
								],
								"type": "object"
							}
						},
						"required": [
							"catering",
							"overnight"
						],
						"type": "object"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"date",
					"country",
					"cateringRefund",
					"overnightRefund",
					"purpose",
					"lumpSums",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddUpBase__id_": {
				"properties": {
					"advanceOverflow": {
						"type": "boolean"
					},
					"expenses": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"advance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"total": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"project": {
						"$ref": "#/components/schemas/ProjectSimple__id_"
					}
				},
				"required": [
					"advanceOverflow",
					"expenses",
					"advance",
					"total",
					"balance",
					"project"
				],
				"type": "object"
			},
			"AddUp__id.Travel__id.binary__": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AddUpBase__id_"
					},
					{
						"properties": {
							"lumpSums": {
								"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
							}
						},
						"required": [
							"lumpSums"
						],
						"type": "object"
					}
				]
			},
			"MoneyNotNull": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double"
					},
					"currency": {
						"$ref": "#/components/schemas/Currency"
					},
					"exchangeRate": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							},
							"rate": {
								"type": "number",
								"format": "double"
							},
							"date": {
								"anyOf": [
									{
										"type": "string",
										"format": "date-time"
									},
									{
										"type": "string"
									}
								]
							}
						},
						"required": [
							"amount",
							"rate",
							"date"
						],
						"type": "object",
						"nullable": true
					}
				},
				"required": [
					"amount",
					"currency"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AdvanceState": {
				"enum": [
					-10,
					0,
					30,
					40
				],
				"type": "number"
			},
			"AdvanceBase__id_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"budget": {
						"$ref": "#/components/schemas/MoneyNotNull"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"reason": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/AdvanceState"
					},
					"settledOn": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"name",
					"budget",
					"project",
					"balance",
					"reason",
					"state",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Place.Exclude_keyofPlace.special__": {
				"properties": {
					"place": {
						"type": "string"
					},
					"country": {
						"$ref": "#/components/schemas/CountrySimple"
					}
				},
				"required": [
					"place",
					"country"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Place.special_": {
				"$ref": "#/components/schemas/Pick_Place.Exclude_keyofPlace.special__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UserSimple__id_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"$ref": "#/components/schemas/Name"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"email",
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TravelState": {
				"enum": [
					-10,
					0,
					10,
					20,
					30,
					40
				],
				"type": "number"
			},
			"Comment__id.TravelState_": {
				"properties": {
					"text": {
						"type": "string"
					},
					"author": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"toState": {
						"$ref": "#/components/schemas/TravelState"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"text",
					"author",
					"toState",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Log__id.TravelState_": {
				"properties": {},
				"type": "object"
			},
			"Travel__id.binary_": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"destinationPlace": {
						"$ref": "#/components/schemas/Omit_Place.special_"
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"claimSpouseRefund": {
						"type": "boolean",
						"nullable": true
					},
					"fellowTravelersNames": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.TravelState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/TravelState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.TravelState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"progress": {
						"type": "number",
						"format": "double"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp__id.Travel__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase__id_"
						},
						"type": "array"
					},
					"isCrossBorder": {
						"type": "boolean",
						"nullable": true
					},
					"a1Certificate": {
						"properties": {
							"destinationName": {
								"type": "string"
							},
							"exactAddress": {
								"type": "string"
							}
						},
						"required": [
							"destinationName",
							"exactAddress"
						],
						"type": "object",
						"nullable": true
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/_id"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"lastPlaceOfWork": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Omit_Place.place_"
							}
						],
						"nullable": true
					},
					"professionalShare": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"stages": {
						"items": {
							"$ref": "#/components/schemas/Stage__id.binary_"
						},
						"type": "array"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/TravelExpense__id.binary_"
						},
						"type": "array"
					},
					"days": {
						"items": {
							"$ref": "#/components/schemas/TravelDay__id_"
						},
						"type": "array"
					}
				},
				"required": [
					"reason",
					"destinationPlace",
					"startDate",
					"endDate",
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"progress",
					"addUp",
					"advances",
					"history",
					"historic",
					"professionalShare",
					"stages",
					"expenses",
					"days"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_Travel__id.binary_-or-Travel__id.binary_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Travel__id.binary_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Travel__id.binary_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ITravel": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"destinationPlace": {
						"$ref": "#/components/schemas/Omit_Place.special_"
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"claimSpouseRefund": {
						"type": "boolean",
						"nullable": true
					},
					"fellowTravelersNames": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.TravelState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/TravelState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.TravelState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"progress": {
						"type": "number",
						"format": "double"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp__id.Travel__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase__id_"
						},
						"type": "array"
					},
					"isCrossBorder": {
						"type": "boolean",
						"nullable": true
					},
					"a1Certificate": {
						"properties": {
							"destinationName": {
								"type": "string"
							},
							"exactAddress": {
								"type": "string"
							}
						},
						"required": [
							"destinationName",
							"exactAddress"
						],
						"type": "object",
						"nullable": true
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/_id"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"lastPlaceOfWork": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Omit_Place.place_"
							}
						],
						"nullable": true
					},
					"professionalShare": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"stages": {
						"items": {
							"$ref": "#/components/schemas/Stage__id.binary_"
						},
						"type": "array"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/TravelExpense__id.binary_"
						},
						"type": "array"
					},
					"days": {
						"items": {
							"$ref": "#/components/schemas/TravelDay__id_"
						},
						"type": "array"
					}
				},
				"required": [
					"reason",
					"destinationPlace",
					"startDate",
					"endDate",
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"progress",
					"addUp",
					"advances",
					"history",
					"historic",
					"professionalShare",
					"stages",
					"expenses",
					"days"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_ITravel_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"reason",
								"destinationPlace",
								"startDate",
								"endDate",
								"claimSpouseRefund",
								"fellowTravelersNames",
								"name",
								"owner",
								"editor",
								"project",
								"comment",
								"bookingRemark",
								"comments",
								"state",
								"log",
								"createdAt",
								"updatedAt",
								"_id",
								"progress",
								"addUp",
								"advances",
								"isCrossBorder",
								"a1Certificate",
								"name",
								"owner",
								"editor",
								"project",
								"comment",
								"bookingRemark",
								"comments",
								"state",
								"log",
								"createdAt",
								"updatedAt",
								"_id",
								"history",
								"historic",
								"lastPlaceOfWork",
								"professionalShare",
								"stages",
								"expenses",
								"days"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Cost_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"currency": {
						"$ref": "#/components/schemas/Currency"
					},
					"exchangeRate": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							},
							"rate": {
								"type": "number",
								"format": "double"
							},
							"date": {
								"anyOf": [
									{
										"type": "string",
										"format": "date-time"
									},
									{
										"type": "string"
									}
								]
							}
						},
						"required": [
							"amount",
							"rate",
							"date"
						],
						"type": "object",
						"nullable": true
					},
					"receipts": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile_mongoose.Types.ObjectId.Binary_"
						},
						"type": "array"
					},
					"date": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"required": [
					"amount",
					"currency",
					"receipts",
					"date"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProjectSimple_mongoose.Types.ObjectId_": {
				"properties": {
					"identifier": {
						"type": "string"
					},
					"organisation": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"identifier",
					"organisation",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Stage_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"departure": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"arrival": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"startLocation": {
						"$ref": "#/components/schemas/Place"
					},
					"endLocation": {
						"$ref": "#/components/schemas/Place"
					},
					"midnightCountries": {
						"items": {
							"properties": {
								"country": {
									"$ref": "#/components/schemas/CountrySimple"
								},
								"date": {
									"anyOf": [
										{
											"type": "string",
											"format": "date-time"
										},
										{
											"type": "string"
										}
									]
								}
							},
							"required": [
								"country",
								"date"
							],
							"type": "object"
						},
						"type": "array",
						"nullable": true
					},
					"transport": {
						"$ref": "#/components/schemas/Transport"
					},
					"cost": {
						"$ref": "#/components/schemas/Cost_mongoose.Types.ObjectId.Binary_"
					},
					"purpose": {
						"$ref": "#/components/schemas/Purpose"
					},
					"project": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
							}
						],
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"departure",
					"arrival",
					"startLocation",
					"endLocation",
					"transport",
					"cost",
					"purpose",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TravelExpense_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"description": {
						"type": "string"
					},
					"cost": {
						"$ref": "#/components/schemas/Cost_mongoose.Types.ObjectId.Binary_"
					},
					"project": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
							}
						],
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"purpose": {
						"type": "string",
						"enum": [
							"professional",
							"mixed"
						]
					}
				},
				"required": [
					"description",
					"cost",
					"_id",
					"purpose"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TravelDay_mongoose.Types.ObjectId_": {
				"properties": {
					"date": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"country": {
						"$ref": "#/components/schemas/CountrySimple"
					},
					"special": {
						"type": "string"
					},
					"cateringRefund": {
						"properties": {
							"breakfast": {
								"type": "boolean"
							},
							"lunch": {
								"type": "boolean"
							},
							"dinner": {
								"type": "boolean"
							}
						},
						"required": [
							"breakfast",
							"lunch",
							"dinner"
						],
						"type": "object"
					},
					"overnightRefund": {
						"type": "boolean"
					},
					"purpose": {
						"$ref": "#/components/schemas/PurposeSimple"
					},
					"lumpSums": {
						"properties": {
							"catering": {
								"properties": {
									"type": {
										"$ref": "#/components/schemas/CateringType"
									},
									"refund": {
										"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
									}
								},
								"required": [
									"type",
									"refund"
								],
								"type": "object"
							},
							"overnight": {
								"properties": {
									"refund": {
										"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
									}
								},
								"required": [
									"refund"
								],
								"type": "object"
							}
						},
						"required": [
							"catering",
							"overnight"
						],
						"type": "object"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"date",
					"country",
					"cateringRefund",
					"overnightRefund",
					"purpose",
					"lumpSums",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddUpBase_mongoose.Types.ObjectId_": {
				"properties": {
					"advanceOverflow": {
						"type": "boolean"
					},
					"expenses": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"advance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"total": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"project": {
						"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
					}
				},
				"required": [
					"advanceOverflow",
					"expenses",
					"advance",
					"total",
					"balance",
					"project"
				],
				"type": "object"
			},
			"AddUp_mongoose.Types.ObjectId.Travel__id.binary__": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AddUpBase_mongoose.Types.ObjectId_"
					},
					{
						"properties": {
							"lumpSums": {
								"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
							}
						},
						"required": [
							"lumpSums"
						],
						"type": "object"
					}
				]
			},
			"Project_mongoose.Types.ObjectId_": {
				"properties": {
					"identifier": {
						"type": "string"
					},
					"organisation": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"name": {
						"type": "string"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"budget": {
						"$ref": "#/components/schemas/BaseCurrencyMoney"
					}
				},
				"required": [
					"identifier",
					"organisation",
					"_id",
					"balance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AdvanceBase_mongoose.Types.ObjectId_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"budget": {
						"$ref": "#/components/schemas/MoneyNotNull"
					},
					"project": {
						"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"reason": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/AdvanceState"
					},
					"settledOn": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"name",
					"budget",
					"project",
					"balance",
					"reason",
					"state",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserSimple_mongoose.Types.ObjectId_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"$ref": "#/components/schemas/Name"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"email",
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Comment_mongoose.Types.ObjectId.TravelState_": {
				"properties": {
					"text": {
						"type": "string"
					},
					"author": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"toState": {
						"$ref": "#/components/schemas/TravelState"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"text",
					"author",
					"toState",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Log_mongoose.Types.ObjectId.TravelState_": {
				"properties": {},
				"type": "object"
			},
			"Travel_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"destinationPlace": {
						"$ref": "#/components/schemas/Omit_Place.special_"
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"claimSpouseRefund": {
						"type": "boolean",
						"nullable": true
					},
					"fellowTravelersNames": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"project": {
						"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment_mongoose.Types.ObjectId.TravelState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/TravelState"
					},
					"log": {
						"$ref": "#/components/schemas/Log_mongoose.Types.ObjectId.TravelState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"progress": {
						"type": "number",
						"format": "double"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp_mongoose.Types.ObjectId.Travel__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase_mongoose.Types.ObjectId_"
						},
						"type": "array"
					},
					"isCrossBorder": {
						"type": "boolean",
						"nullable": true
					},
					"a1Certificate": {
						"properties": {
							"destinationName": {
								"type": "string"
							},
							"exactAddress": {
								"type": "string"
							}
						},
						"required": [
							"destinationName",
							"exactAddress"
						],
						"type": "object",
						"nullable": true
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"lastPlaceOfWork": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Omit_Place.place_"
							}
						],
						"nullable": true
					},
					"professionalShare": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"stages": {
						"items": {
							"$ref": "#/components/schemas/Stage_mongoose.Types.ObjectId.Binary_"
						},
						"type": "array"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/TravelExpense_mongoose.Types.ObjectId.Binary_"
						},
						"type": "array"
					},
					"days": {
						"items": {
							"$ref": "#/components/schemas/TravelDay_mongoose.Types.ObjectId_"
						},
						"type": "array"
					}
				},
				"required": [
					"reason",
					"destinationPlace",
					"startDate",
					"endDate",
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"progress",
					"addUp",
					"advances",
					"history",
					"historic",
					"professionalShare",
					"stages",
					"expenses",
					"days"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial__days-TravelPost-at-days--lastPlaceOfWork-TravelPost-at-lastPlaceOfWork--_id-TravelPost_91__id_93__.NoPost_": {
				"properties": {
					"days": {
						"items": {
							"properties": {
								"overnightRefund": {
									"type": "boolean"
								},
								"cateringRefund": {
									"properties": {
										"dinner": {
											"type": "boolean"
										},
										"lunch": {
											"type": "boolean"
										},
										"breakfast": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"purpose": {
									"$ref": "#/components/schemas/PurposeSimple"
								},
								"date": {
									"type": "string",
									"format": "date-time"
								}
							},
							"type": "object"
						},
						"type": "array"
					},
					"lastPlaceOfWork": {
						"properties": {
							"country": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/CountrySimple"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"special": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody__days-TravelPost-at-days--lastPlaceOfWork-TravelPost-at-lastPlaceOfWork--_id-TravelPost_91__id_93___": {
				"$ref": "#/components/schemas/SetterPartial__days-TravelPost-at-days--lastPlaceOfWork-TravelPost-at-lastPlaceOfWork--_id-TravelPost_91__id_93__.NoPost_"
			},
			"SetterPartial_TravelExpense_mongoose.Types.ObjectId.Binary_.NoPost_": {
				"properties": {
					"note": {
						"type": "string"
					},
					"purpose": {
						"type": "string",
						"enum": [
							"professional",
							"mixed"
						]
					},
					"cost": {
						"properties": {
							"receipts": {
								"anyOf": [
									{
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									},
									{
										"items": {
											"properties": {
												"data": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/Binary"
														}
													]
												},
												"name": {
													"type": "string"
												},
												"type": {
													"type": "string",
													"enum": [
														"application/pdf",
														"image/jpeg",
														"image/png"
													]
												},
												"_id": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/mongoose.Types.ObjectId"
														}
													]
												}
											},
											"type": "object"
										},
										"type": "array"
									}
								]
							},
							"amount": {
								"type": "number",
								"format": "double"
							},
							"currency": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/Currency"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"date": {
								"anyOf": [
									{
										"type": "string"
									},
									{
										"type": "string",
										"format": "date-time"
									}
								]
							}
						},
						"type": "object"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
							},
							{
								"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
							}
						]
					},
					"description": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_TravelExpense_mongoose.Types.ObjectId.Binary__": {
				"$ref": "#/components/schemas/SetterPartial_TravelExpense_mongoose.Types.ObjectId.Binary_.NoPost_"
			},
			"SetterPartial_Stage_mongoose.Types.ObjectId.Binary_.NoPost_": {
				"properties": {
					"note": {
						"type": "string"
					},
					"purpose": {
						"$ref": "#/components/schemas/Purpose"
					},
					"cost": {
						"properties": {
							"receipts": {
								"anyOf": [
									{
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									},
									{
										"items": {
											"properties": {
												"data": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/Binary"
														}
													]
												},
												"name": {
													"type": "string"
												},
												"type": {
													"type": "string",
													"enum": [
														"application/pdf",
														"image/jpeg",
														"image/png"
													]
												},
												"_id": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/mongoose.Types.ObjectId"
														}
													]
												}
											},
											"type": "object"
										},
										"type": "array"
									}
								]
							},
							"amount": {
								"type": "number",
								"format": "double"
							},
							"currency": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/Currency"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"date": {
								"anyOf": [
									{
										"type": "string"
									},
									{
										"type": "string",
										"format": "date-time"
									}
								]
							}
						},
						"type": "object"
					},
					"transport": {
						"anyOf": [
							{
								"properties": {
									"type": {
										"type": "string",
										"enum": [
											"airplane",
											"shipOrFerry",
											"otherTransport"
										]
									}
								},
								"type": "object"
							},
							{
								"properties": {
									"distanceRefundType": {
										"type": "string",
										"enum": [
											"car",
											"motorcycle",
											"halfCar"
										]
									},
									"distance": {
										"type": "number",
										"format": "double"
									},
									"type": {
										"type": "string",
										"enum": [
											"ownCar"
										],
										"nullable": false
									}
								},
								"type": "object"
							}
						]
					},
					"midnightCountries": {
						"items": {
							"properties": {
								"country": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/CountrySimple"
										},
										{
											"$ref": "#/components/schemas/IdDocument_string_"
										}
									]
								},
								"date": {
									"anyOf": [
										{
											"type": "string"
										},
										{
											"type": "string",
											"format": "date-time"
										}
									]
								}
							},
							"type": "object"
						},
						"type": "array"
					},
					"endLocation": {
						"properties": {
							"country": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/CountrySimple"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"special": {
								"type": "string"
							},
							"place": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"startLocation": {
						"properties": {
							"country": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/CountrySimple"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"special": {
								"type": "string"
							},
							"place": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"arrival": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					},
					"departure": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
							},
							{
								"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
							}
						]
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_Stage_mongoose.Types.ObjectId.Binary__": {
				"$ref": "#/components/schemas/SetterPartial_Stage_mongoose.Types.ObjectId.Binary_.NoPost_"
			},
			"TravelSimple__id_": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"destinationPlace": {
						"$ref": "#/components/schemas/Omit_Place.special_"
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"claimSpouseRefund": {
						"type": "boolean",
						"nullable": true
					},
					"fellowTravelersNames": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.TravelState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/TravelState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.TravelState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"progress": {
						"type": "number",
						"format": "double"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp__id.Travel__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase__id_"
						},
						"type": "array"
					},
					"isCrossBorder": {
						"type": "boolean",
						"nullable": true
					},
					"a1Certificate": {
						"properties": {
							"destinationName": {
								"type": "string"
							},
							"exactAddress": {
								"type": "string"
							}
						},
						"required": [
							"destinationName",
							"exactAddress"
						],
						"type": "object",
						"nullable": true
					}
				},
				"required": [
					"reason",
					"destinationPlace",
					"startDate",
					"endDate",
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"progress",
					"addUp",
					"advances"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddUp__id.ExpenseReport__id.binary__": {
				"$ref": "#/components/schemas/AddUpBase__id_"
			},
			"HexColor": {
				"type": "string",
				"pattern": "/^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/"
			},
			"TextColor": {
				"type": "string",
				"enum": [
					"black",
					"white"
				]
			},
			"BadgeStyle": {
				"properties": {
					"color": {
						"$ref": "#/components/schemas/HexColor"
					},
					"text": {
						"$ref": "#/components/schemas/TextColor"
					}
				},
				"required": [
					"color",
					"text"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Category__id_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"style": {
						"$ref": "#/components/schemas/BadgeStyle"
					},
					"isDefault": {
						"type": "boolean"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"name",
					"style",
					"isDefault",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExpenseReportState": {
				"enum": [
					10,
					20,
					30,
					40
				],
				"type": "number"
			},
			"Comment__id.ExpenseReportState_": {
				"properties": {
					"text": {
						"type": "string"
					},
					"author": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"toState": {
						"$ref": "#/components/schemas/ExpenseReportState"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"text",
					"author",
					"toState",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Log__id.ExpenseReportState_": {
				"properties": {},
				"type": "object"
			},
			"ExpenseReportSimple__id_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.ExpenseReportState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/ExpenseReportState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.ExpenseReportState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp__id.ExpenseReport__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase__id_"
						},
						"type": "array"
					},
					"category": {
						"$ref": "#/components/schemas/Category__id_"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"addUp",
					"advances",
					"category"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddUp__id.HealthCareCost__id.binary__": {
				"$ref": "#/components/schemas/AddUpBase__id_"
			},
			"HealthCareCostState": {
				"enum": [
					10,
					20,
					30,
					40
				],
				"type": "number"
			},
			"Comment__id.HealthCareCostState_": {
				"properties": {
					"text": {
						"type": "string"
					},
					"author": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"toState": {
						"$ref": "#/components/schemas/HealthCareCostState"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"text",
					"author",
					"toState",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Log__id.HealthCareCostState_": {
				"properties": {},
				"type": "object"
			},
			"HealthCareCostSimple__id_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.HealthCareCostState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/HealthCareCostState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.HealthCareCostState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"patientName": {
						"type": "string"
					},
					"insurance": {
						"$ref": "#/components/schemas/HealthInsurance__id_"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp__id.HealthCareCost__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase__id_"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"patientName",
					"insurance",
					"addUp",
					"advances"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Comment__id.AdvanceState_": {
				"properties": {
					"text": {
						"type": "string"
					},
					"author": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"toState": {
						"$ref": "#/components/schemas/AdvanceState"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"text",
					"author",
					"toState",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Log__id.AdvanceState_": {
				"properties": {},
				"type": "object"
			},
			"ReportModelName": {
				"type": "string",
				"enum": [
					"Travel",
					"ExpenseReport",
					"HealthCareCost"
				]
			},
			"Advance__id_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.AdvanceState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/AdvanceState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.AdvanceState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/_id"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"budget": {
						"$ref": "#/components/schemas/MoneyNotNull"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"reason": {
						"type": "string"
					},
					"settledOn": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"offsetAgainst": {
						"items": {
							"properties": {
								"amount": {
									"type": "number",
									"format": "double"
								},
								"report": {
									"properties": {
										"name": {
											"type": "string"
										},
										"_id": {
											"$ref": "#/components/schemas/_id"
										}
									},
									"required": [
										"name",
										"_id"
									],
									"type": "object",
									"nullable": true
								},
								"type": {
									"$ref": "#/components/schemas/ReportModelName"
								}
							},
							"required": [
								"amount",
								"type"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"history",
					"historic",
					"budget",
					"balance",
					"reason",
					"offsetAgainst"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IdDocument_CurrencyCode_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/CurrencyCode"
					},
					{
						"properties": {
							"_id": {
								"$ref": "#/components/schemas/CurrencyCode"
							}
						},
						"required": [
							"_id"
						],
						"type": "object"
					}
				]
			},
			"Pick_Money.Exclude_keyofMoney.currency__": {
				"properties": {
					"exchangeRate": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							},
							"rate": {
								"type": "number",
								"format": "double"
							},
							"date": {
								"anyOf": [
									{
										"type": "string"
									},
									{
										"type": "string",
										"format": "date-time"
									}
								]
							}
						},
						"required": [
							"amount",
							"rate",
							"date"
						],
						"type": "object"
					},
					"amount": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"amount"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"MoneyPost": {
				"properties": {
					"exchangeRate": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							},
							"rate": {
								"type": "number",
								"format": "double"
							},
							"date": {
								"anyOf": [
									{
										"type": "string",
										"format": "date-time"
									},
									{
										"type": "string"
									}
								]
							}
						},
						"required": [
							"amount",
							"rate",
							"date"
						],
						"type": "object",
						"nullable": true
					},
					"amount": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"currency": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/IdDocument_CurrencyCode_"
							},
							{
								"$ref": "#/components/schemas/Currency"
							}
						]
					}
				},
				"required": [
					"amount",
					"currency"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_Omit_TravelSimple_mongoose.Types.ObjectId_.comments-or-comment-or-progress-or-advance-or-log-or-addUp-or-editor-or-owner_.NoPost_": {
				"properties": {
					"bookingRemark": {
						"type": "string"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
							},
							{
								"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
							}
						]
					},
					"fellowTravelersNames": {
						"type": "string"
					},
					"claimSpouseRefund": {
						"type": "boolean"
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					},
					"destinationPlace": {
						"properties": {
							"country": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/CountrySimple"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"place": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"reason": {
						"type": "string"
					},
					"a1Certificate": {
						"properties": {
							"destinationName": {
								"type": "string"
							},
							"exactAddress": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"isCrossBorder": {
						"type": "boolean"
					},
					"advances": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
								},
								"type": "array"
							},
							{
								"items": {
									"properties": {
										"settledOn": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"type": "string",
													"format": "date-time"
												}
											]
										},
										"project": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
												},
												{
													"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
												}
											]
										},
										"reason": {
											"type": "string"
										},
										"budget": {
											"properties": {
												"amount": {
													"type": "number",
													"format": "double"
												},
												"currency": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Currency"
														},
														{
															"$ref": "#/components/schemas/IdDocument_string_"
														}
													]
												}
											},
											"type": "object"
										},
										"balance": {
											"properties": {
												"amount": {
													"type": "number",
													"format": "double"
												}
											},
											"type": "object"
										},
										"name": {
											"type": "string"
										},
										"_id": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"$ref": "#/components/schemas/mongoose.Types.ObjectId"
												}
											]
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						]
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"TravelApplication": {
				"properties": {
					"bookingRemark": {
						"type": "string"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
							},
							{
								"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
							}
						]
					},
					"fellowTravelersNames": {
						"type": "string"
					},
					"claimSpouseRefund": {
						"type": "boolean"
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					},
					"destinationPlace": {
						"properties": {
							"country": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/CountrySimple"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"place": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"reason": {
						"type": "string"
					},
					"a1Certificate": {
						"properties": {
							"destinationName": {
								"type": "string"
							},
							"exactAddress": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"isCrossBorder": {
						"type": "boolean"
					},
					"advances": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
								},
								"type": "array"
							},
							{
								"items": {
									"properties": {
										"settledOn": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"type": "string",
													"format": "date-time"
												}
											]
										},
										"project": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
												},
												{
													"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
												}
											]
										},
										"reason": {
											"type": "string"
										},
										"budget": {
											"properties": {
												"amount": {
													"type": "number",
													"format": "double"
												},
												"currency": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Currency"
														},
														{
															"$ref": "#/components/schemas/IdDocument_string_"
														}
													]
												}
											},
											"type": "object"
										},
										"balance": {
											"properties": {
												"amount": {
													"type": "number",
													"format": "double"
												}
											},
											"type": "object"
										},
										"name": {
											"type": "string"
										},
										"_id": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"$ref": "#/components/schemas/mongoose.Types.ObjectId"
												}
											]
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						]
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					},
					"advance": {
						"$ref": "#/components/schemas/MoneyPost"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DocumentFile_mongoose.Types.ObjectId.binary_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/binary"
					},
					"owner": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"type": {
						"$ref": "#/components/schemas/DocumentFileType"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"data",
					"owner",
					"type",
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Cost_mongoose.Types.ObjectId.binary_": {
				"properties": {
					"amount": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"currency": {
						"$ref": "#/components/schemas/Currency"
					},
					"exchangeRate": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							},
							"rate": {
								"type": "number",
								"format": "double"
							},
							"date": {
								"anyOf": [
									{
										"type": "string",
										"format": "date-time"
									},
									{
										"type": "string"
									}
								]
							}
						},
						"required": [
							"amount",
							"rate",
							"date"
						],
						"type": "object",
						"nullable": true
					},
					"receipts": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile_mongoose.Types.ObjectId.binary_"
						},
						"type": "array"
					},
					"date": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"required": [
					"amount",
					"currency",
					"receipts",
					"date"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Stage_mongoose.Types.ObjectId.binary_": {
				"properties": {
					"departure": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"arrival": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"startLocation": {
						"$ref": "#/components/schemas/Place"
					},
					"endLocation": {
						"$ref": "#/components/schemas/Place"
					},
					"midnightCountries": {
						"items": {
							"properties": {
								"country": {
									"$ref": "#/components/schemas/CountrySimple"
								},
								"date": {
									"anyOf": [
										{
											"type": "string",
											"format": "date-time"
										},
										{
											"type": "string"
										}
									]
								}
							},
							"required": [
								"country",
								"date"
							],
							"type": "object"
						},
						"type": "array",
						"nullable": true
					},
					"transport": {
						"$ref": "#/components/schemas/Transport"
					},
					"cost": {
						"$ref": "#/components/schemas/Cost_mongoose.Types.ObjectId.binary_"
					},
					"purpose": {
						"$ref": "#/components/schemas/Purpose"
					},
					"project": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
							}
						],
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"departure",
					"arrival",
					"startLocation",
					"endLocation",
					"transport",
					"cost",
					"purpose",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TravelExpense_mongoose.Types.ObjectId.binary_": {
				"properties": {
					"description": {
						"type": "string"
					},
					"cost": {
						"$ref": "#/components/schemas/Cost_mongoose.Types.ObjectId.binary_"
					},
					"project": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
							}
						],
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"purpose": {
						"type": "string",
						"enum": [
							"professional",
							"mixed"
						]
					}
				},
				"required": [
					"description",
					"cost",
					"_id",
					"purpose"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Travel_mongoose.Types.ObjectId.binary_": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"destinationPlace": {
						"$ref": "#/components/schemas/Omit_Place.special_"
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"claimSpouseRefund": {
						"type": "boolean",
						"nullable": true
					},
					"fellowTravelersNames": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"project": {
						"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment_mongoose.Types.ObjectId.TravelState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/TravelState"
					},
					"log": {
						"$ref": "#/components/schemas/Log_mongoose.Types.ObjectId.TravelState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"progress": {
						"type": "number",
						"format": "double"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp_mongoose.Types.ObjectId.Travel__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase_mongoose.Types.ObjectId_"
						},
						"type": "array"
					},
					"isCrossBorder": {
						"type": "boolean",
						"nullable": true
					},
					"a1Certificate": {
						"properties": {
							"destinationName": {
								"type": "string"
							},
							"exactAddress": {
								"type": "string"
							}
						},
						"required": [
							"destinationName",
							"exactAddress"
						],
						"type": "object",
						"nullable": true
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"lastPlaceOfWork": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Omit_Place.place_"
							}
						],
						"nullable": true
					},
					"professionalShare": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"stages": {
						"items": {
							"$ref": "#/components/schemas/Stage_mongoose.Types.ObjectId.binary_"
						},
						"type": "array"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/TravelExpense_mongoose.Types.ObjectId.binary_"
						},
						"type": "array"
					},
					"days": {
						"items": {
							"$ref": "#/components/schemas/TravelDay_mongoose.Types.ObjectId_"
						},
						"type": "array"
					}
				},
				"required": [
					"reason",
					"destinationPlace",
					"startDate",
					"endDate",
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"progress",
					"addUp",
					"advances",
					"history",
					"historic",
					"professionalShare",
					"stages",
					"expenses",
					"days"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserWithName__id_": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"name": {
						"$ref": "#/components/schemas/Name"
					}
				},
				"required": [
					"_id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_UserWithName__id_-or-UserWithName__id_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/UserWithName__id_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/UserWithName__id_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_TravelPost.NoPost_": {
				"properties": {
					"bookingRemark": {
						"type": "string"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
							},
							{
								"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
							}
						]
					},
					"fellowTravelersNames": {
						"type": "string"
					},
					"claimSpouseRefund": {
						"type": "boolean"
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "string",
								"format": "date-time"
							}
						]
					},
					"destinationPlace": {
						"properties": {
							"country": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/CountrySimple"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"place": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"reason": {
						"type": "string"
					},
					"a1Certificate": {
						"properties": {
							"destinationName": {
								"type": "string"
							},
							"exactAddress": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"isCrossBorder": {
						"type": "boolean"
					},
					"advances": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
								},
								"type": "array"
							},
							{
								"items": {
									"properties": {
										"settledOn": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"type": "string",
													"format": "date-time"
												}
											]
										},
										"project": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
												},
												{
													"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
												}
											]
										},
										"reason": {
											"type": "string"
										},
										"budget": {
											"properties": {
												"amount": {
													"type": "number",
													"format": "double"
												},
												"currency": {
													"anyOf": [
														{
															"$ref": "#/components/schemas/Currency"
														},
														{
															"$ref": "#/components/schemas/IdDocument_string_"
														}
													]
												}
											},
											"type": "object"
										},
										"balance": {
											"properties": {
												"amount": {
													"type": "number",
													"format": "double"
												}
											},
											"type": "object"
										},
										"name": {
											"type": "string"
										},
										"_id": {
											"anyOf": [
												{
													"type": "string"
												},
												{
													"$ref": "#/components/schemas/mongoose.Types.ObjectId"
												}
											]
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						]
					},
					"days": {
						"items": {
							"properties": {
								"overnightRefund": {
									"type": "boolean"
								},
								"cateringRefund": {
									"properties": {
										"dinner": {
											"type": "boolean"
										},
										"lunch": {
											"type": "boolean"
										},
										"breakfast": {
											"type": "boolean"
										}
									},
									"type": "object"
								},
								"purpose": {
									"$ref": "#/components/schemas/PurposeSimple"
								},
								"date": {
									"type": "string",
									"format": "date-time"
								}
							},
							"type": "object"
						},
						"type": "array"
					},
					"lastPlaceOfWork": {
						"properties": {
							"country": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/CountrySimple"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"special": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_TravelPost_": {
				"$ref": "#/components/schemas/SetterPartial_TravelPost.NoPost_"
			},
			"Settings__id_": {
				"properties": {
					"userCanSeeAllProjects": {
						"type": "boolean"
					},
					"onlyShowProjectNamesOnAssigned": {
						"type": "boolean"
					},
					"autoSelectAvailableAdvances": {
						"type": "boolean"
					},
					"defaultAccess": {
						"properties": {
							"user": {
								"type": "boolean"
							},
							"inWork:expenseReport": {
								"type": "boolean"
							},
							"inWork:healthCareCost": {
								"type": "boolean"
							},
							"appliedFor:advance": {
								"type": "boolean"
							},
							"appliedFor:travel": {
								"type": "boolean"
							},
							"approved:travel": {
								"type": "boolean"
							},
							"approve/advance": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"book/advance": {
								"type": "boolean"
							},
							"book/travel": {
								"type": "boolean"
							},
							"book/expenseReport": {
								"type": "boolean"
							},
							"book/healthCareCost": {
								"type": "boolean"
							},
							"admin": {
								"type": "boolean"
							}
						},
						"required": [
							"user",
							"inWork:expenseReport",
							"inWork:healthCareCost",
							"appliedFor:advance",
							"appliedFor:travel",
							"approved:travel",
							"approve/advance",
							"approve/travel",
							"examine/travel",
							"examine/expenseReport",
							"examine/healthCareCost",
							"book/advance",
							"book/travel",
							"book/expenseReport",
							"book/healthCareCost",
							"admin"
						],
						"type": "object"
					},
					"disableReportType": {
						"properties": {
							"travel": {
								"type": "boolean"
							},
							"expenseReport": {
								"type": "boolean"
							},
							"healthCareCost": {
								"type": "boolean"
							},
							"advance": {
								"type": "boolean"
							}
						},
						"required": [
							"travel",
							"expenseReport",
							"healthCareCost",
							"advance"
						],
						"type": "object"
					},
					"retentionPolicy": {
						"properties": {
							"deleteBookedAfterXDays": {
								"type": "number",
								"format": "double"
							},
							"deleteApprovedTravelAfterXDaysUnused": {
								"type": "number",
								"format": "double"
							},
							"deleteInWorkReportsAfterXDaysUnused": {
								"type": "number",
								"format": "double"
							},
							"mailXDaysBeforeDeletion": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"deleteBookedAfterXDays",
							"deleteApprovedTravelAfterXDaysUnused",
							"deleteInWorkReportsAfterXDaysUnused",
							"mailXDaysBeforeDeletion"
						],
						"type": "object"
					},
					"uploadTokenExpireAfterSeconds": {
						"type": "number",
						"format": "double"
					},
					"version": {
						"type": "string"
					},
					"migrateFrom": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"userCanSeeAllProjects",
					"onlyShowProjectNamesOnAssigned",
					"autoSelectAvailableAdvances",
					"defaultAccess",
					"disableReportType",
					"retentionPolicy",
					"uploadTokenExpireAfterSeconds",
					"version",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Settings_mongoose.Types.ObjectId_": {
				"properties": {
					"userCanSeeAllProjects": {
						"type": "boolean"
					},
					"onlyShowProjectNamesOnAssigned": {
						"type": "boolean"
					},
					"autoSelectAvailableAdvances": {
						"type": "boolean"
					},
					"defaultAccess": {
						"properties": {
							"user": {
								"type": "boolean"
							},
							"inWork:expenseReport": {
								"type": "boolean"
							},
							"inWork:healthCareCost": {
								"type": "boolean"
							},
							"appliedFor:advance": {
								"type": "boolean"
							},
							"appliedFor:travel": {
								"type": "boolean"
							},
							"approved:travel": {
								"type": "boolean"
							},
							"approve/advance": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"book/advance": {
								"type": "boolean"
							},
							"book/travel": {
								"type": "boolean"
							},
							"book/expenseReport": {
								"type": "boolean"
							},
							"book/healthCareCost": {
								"type": "boolean"
							},
							"admin": {
								"type": "boolean"
							}
						},
						"required": [
							"user",
							"inWork:expenseReport",
							"inWork:healthCareCost",
							"appliedFor:advance",
							"appliedFor:travel",
							"approved:travel",
							"approve/advance",
							"approve/travel",
							"examine/travel",
							"examine/expenseReport",
							"examine/healthCareCost",
							"book/advance",
							"book/travel",
							"book/expenseReport",
							"book/healthCareCost",
							"admin"
						],
						"type": "object"
					},
					"disableReportType": {
						"properties": {
							"travel": {
								"type": "boolean"
							},
							"expenseReport": {
								"type": "boolean"
							},
							"healthCareCost": {
								"type": "boolean"
							},
							"advance": {
								"type": "boolean"
							}
						},
						"required": [
							"travel",
							"expenseReport",
							"healthCareCost",
							"advance"
						],
						"type": "object"
					},
					"retentionPolicy": {
						"properties": {
							"deleteBookedAfterXDays": {
								"type": "number",
								"format": "double"
							},
							"deleteApprovedTravelAfterXDaysUnused": {
								"type": "number",
								"format": "double"
							},
							"deleteInWorkReportsAfterXDaysUnused": {
								"type": "number",
								"format": "double"
							},
							"mailXDaysBeforeDeletion": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"deleteBookedAfterXDays",
							"deleteApprovedTravelAfterXDaysUnused",
							"deleteInWorkReportsAfterXDaysUnused",
							"mailXDaysBeforeDeletion"
						],
						"type": "object"
					},
					"uploadTokenExpireAfterSeconds": {
						"type": "number",
						"format": "double"
					},
					"version": {
						"type": "string"
					},
					"migrateFrom": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"userCanSeeAllProjects",
					"onlyShowProjectNamesOnAssigned",
					"autoSelectAvailableAdvances",
					"defaultAccess",
					"disableReportType",
					"retentionPolicy",
					"uploadTokenExpireAfterSeconds",
					"version",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_Omit_ISettings_mongoose.Types.ObjectId_.version-or-migrateFrom_.NoPost_": {
				"properties": {
					"uploadTokenExpireAfterSeconds": {
						"type": "number",
						"format": "double"
					},
					"retentionPolicy": {
						"properties": {
							"mailXDaysBeforeDeletion": {
								"type": "number",
								"format": "double"
							},
							"deleteInWorkReportsAfterXDaysUnused": {
								"type": "number",
								"format": "double"
							},
							"deleteApprovedTravelAfterXDaysUnused": {
								"type": "number",
								"format": "double"
							},
							"deleteBookedAfterXDays": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"disableReportType": {
						"properties": {
							"advance": {
								"type": "boolean"
							},
							"healthCareCost": {
								"type": "boolean"
							},
							"expenseReport": {
								"type": "boolean"
							},
							"travel": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					"defaultAccess": {
						"properties": {
							"admin": {
								"type": "boolean"
							},
							"book/healthCareCost": {
								"type": "boolean"
							},
							"book/expenseReport": {
								"type": "boolean"
							},
							"book/travel": {
								"type": "boolean"
							},
							"book/advance": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"approve/advance": {
								"type": "boolean"
							},
							"approved:travel": {
								"type": "boolean"
							},
							"appliedFor:travel": {
								"type": "boolean"
							},
							"appliedFor:advance": {
								"type": "boolean"
							},
							"inWork:healthCareCost": {
								"type": "boolean"
							},
							"inWork:expenseReport": {
								"type": "boolean"
							},
							"user": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					"autoSelectAvailableAdvances": {
						"type": "boolean"
					},
					"onlyShowProjectNamesOnAssigned": {
						"type": "boolean"
					},
					"userCanSeeAllProjects": {
						"type": "boolean"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_Omit_ISettings_mongoose.Types.ObjectId_.version-or-migrateFrom__": {
				"$ref": "#/components/schemas/SetterPartial_Omit_ISettings_mongoose.Types.ObjectId_.version-or-migrateFrom_.NoPost_"
			},
			"ProjectSimpleWithName__id_": {
				"properties": {
					"identifier": {
						"type": "string"
					},
					"organisation": {
						"$ref": "#/components/schemas/_id"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"identifier",
					"organisation",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_ProjectSimpleWithName__id_-or-ProjectSimpleWithName__id_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ProjectSimpleWithName__id_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/ProjectSimpleWithName__id_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProjectSimple": {
				"properties": {
					"identifier": {
						"type": "string"
					},
					"organisation": {
						"$ref": "#/components/schemas/_id"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"identifier",
					"organisation",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_ProjectSimple_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"identifier",
								"organisation",
								"_id"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_Project__id_-or-Project__id_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Project__id_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Project__id_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IProject": {
				"properties": {
					"identifier": {
						"type": "string"
					},
					"organisation": {
						"$ref": "#/components/schemas/_id"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"name": {
						"type": "string"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"budget": {
						"$ref": "#/components/schemas/BaseCurrencyMoney"
					}
				},
				"required": [
					"identifier",
					"organisation",
					"_id",
					"balance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_IProject_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"identifier",
								"organisation",
								"_id",
								"name",
								"balance",
								"budget"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_ProjectWithUsers_mongoose.Types.ObjectId_.NoPost_": {
				"properties": {
					"supervisors": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/mongoose.Types.ObjectId"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						]
					},
					"assignees": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/mongoose.Types.ObjectId"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						]
					},
					"identifier": {
						"type": "string"
					},
					"budget": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"balance": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"organisation": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_ProjectWithUsers_mongoose.Types.ObjectId__": {
				"$ref": "#/components/schemas/SetterPartial_ProjectWithUsers_mongoose.Types.ObjectId_.NoPost_"
			},
			"SetterPartial_IProject_mongoose.Types.ObjectId_.NoPost_": {
				"properties": {
					"identifier": {
						"type": "string"
					},
					"budget": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"balance": {
						"properties": {
							"amount": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"organisation": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_IProject_mongoose.Types.ObjectId__": {
				"$ref": "#/components/schemas/SetterPartial_IProject_mongoose.Types.ObjectId_.NoPost_"
			},
			"FontName": {
				"type": "string",
				"enum": [
					"NotoSans",
					"Inter"
				]
			},
			"PrinterSettings__id_": {
				"properties": {
					"fontSizes": {
						"properties": {
							"L": {
								"type": "number",
								"format": "double"
							},
							"M": {
								"type": "number",
								"format": "double"
							},
							"S": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"L",
							"M",
							"S"
						],
						"type": "object"
					},
					"textColor": {
						"$ref": "#/components/schemas/HexColor"
					},
					"pagePadding": {
						"type": "number",
						"format": "double"
					},
					"borderColor": {
						"$ref": "#/components/schemas/HexColor"
					},
					"borderThickness": {
						"type": "number",
						"format": "double"
					},
					"cellPadding": {
						"properties": {
							"bottom": {
								"type": "number",
								"format": "double"
							},
							"x": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"bottom",
							"x"
						],
						"type": "object"
					},
					"pageSize": {
						"properties": {
							"height": {
								"type": "number",
								"format": "double"
							},
							"width": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"height",
							"width"
						],
						"type": "object"
					},
					"fontName": {
						"$ref": "#/components/schemas/FontName"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"fontSizes",
					"textColor",
					"pagePadding",
					"borderColor",
					"borderThickness",
					"cellPadding",
					"pageSize",
					"fontName",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PrinterSettings_mongoose.Types.ObjectId_": {
				"properties": {
					"fontSizes": {
						"properties": {
							"L": {
								"type": "number",
								"format": "double"
							},
							"M": {
								"type": "number",
								"format": "double"
							},
							"S": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"L",
							"M",
							"S"
						],
						"type": "object"
					},
					"textColor": {
						"$ref": "#/components/schemas/HexColor"
					},
					"pagePadding": {
						"type": "number",
						"format": "double"
					},
					"borderColor": {
						"$ref": "#/components/schemas/HexColor"
					},
					"borderThickness": {
						"type": "number",
						"format": "double"
					},
					"cellPadding": {
						"properties": {
							"bottom": {
								"type": "number",
								"format": "double"
							},
							"x": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"bottom",
							"x"
						],
						"type": "object"
					},
					"pageSize": {
						"properties": {
							"height": {
								"type": "number",
								"format": "double"
							},
							"width": {
								"type": "number",
								"format": "double"
							}
						},
						"required": [
							"height",
							"width"
						],
						"type": "object"
					},
					"fontName": {
						"$ref": "#/components/schemas/FontName"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"fontSizes",
					"textColor",
					"pagePadding",
					"borderColor",
					"borderThickness",
					"cellPadding",
					"pageSize",
					"fontName",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_IPrinterSettings_mongoose.Types.ObjectId_.NoPost_": {
				"properties": {
					"pageSize": {
						"properties": {
							"height": {
								"type": "number",
								"format": "double"
							},
							"width": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"cellPadding": {
						"properties": {
							"bottom": {
								"type": "number",
								"format": "double"
							},
							"x": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"borderThickness": {
						"type": "number",
						"format": "double"
					},
					"borderColor": {
						"type": "string"
					},
					"pagePadding": {
						"type": "number",
						"format": "double"
					},
					"textColor": {
						"type": "string"
					},
					"fontSizes": {
						"properties": {
							"L": {
								"type": "number",
								"format": "double"
							},
							"M": {
								"type": "number",
								"format": "double"
							},
							"S": {
								"type": "number",
								"format": "double"
							}
						},
						"type": "object"
					},
					"fontName": {
						"type": "string",
						"enum": [
							"NotoSans",
							"Inter"
						]
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_IPrinterSettings_mongoose.Types.ObjectId__": {
				"$ref": "#/components/schemas/SetterPartial_IPrinterSettings_mongoose.Types.ObjectId_.NoPost_"
			},
			"ImageType": {
				"type": "string",
				"enum": [
					"image/jpeg",
					"image/png"
				]
			},
			"DocumentFile__id.binary.ImageType_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/binary"
					},
					"owner": {
						"$ref": "#/components/schemas/_id"
					},
					"type": {
						"$ref": "#/components/schemas/ImageType"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"data",
					"owner",
					"type",
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Organisation__id.binary_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"subfolderPath": {
						"type": "string"
					},
					"reportEmail": {
						"type": "string",
						"nullable": true
					},
					"a1CertificateEmail": {
						"type": "string",
						"nullable": true
					},
					"bankDetails": {
						"type": "string",
						"nullable": true
					},
					"companyNumber": {
						"type": "string",
						"nullable": true
					},
					"logo": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DocumentFile__id.binary.ImageType_"
							}
						],
						"nullable": true
					},
					"website": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"_id",
					"subfolderPath"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_Organisation__id.binary_-or-Organisation__id.binary_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Organisation__id.binary_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Organisation__id.binary_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IOrganisation": {
				"properties": {
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"subfolderPath": {
						"type": "string"
					},
					"reportEmail": {
						"type": "string",
						"nullable": true
					},
					"a1CertificateEmail": {
						"type": "string",
						"nullable": true
					},
					"bankDetails": {
						"type": "string",
						"nullable": true
					},
					"companyNumber": {
						"type": "string",
						"nullable": true
					},
					"logo": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DocumentFile__id.binary.ImageType_"
							}
						],
						"nullable": true
					},
					"website": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"_id",
					"subfolderPath"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_IOrganisation_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"name",
								"_id",
								"subfolderPath",
								"reportEmail",
								"a1CertificateEmail",
								"bankDetails",
								"companyNumber",
								"logo",
								"website"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DocumentFile_mongoose.Types.ObjectId.Binary.ImageType_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/Binary"
					},
					"owner": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"type": {
						"$ref": "#/components/schemas/ImageType"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"data",
					"owner",
					"type",
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Organisation_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"subfolderPath": {
						"type": "string"
					},
					"reportEmail": {
						"type": "string",
						"nullable": true
					},
					"a1CertificateEmail": {
						"type": "string",
						"nullable": true
					},
					"bankDetails": {
						"type": "string",
						"nullable": true
					},
					"companyNumber": {
						"type": "string",
						"nullable": true
					},
					"logo": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DocumentFile_mongoose.Types.ObjectId.Binary.ImageType_"
							}
						],
						"nullable": true
					},
					"website": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"_id",
					"subfolderPath"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_PostOrganisation.NoPost_": {
				"properties": {
					"logo": {
						"properties": {
							"data": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"type": {
								"type": "string",
								"enum": [
									"application/pdf",
									"image/jpeg",
									"image/png"
								]
							},
							"_id": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"companyNumber": {
						"type": "string"
					},
					"bankDetails": {
						"type": "string"
					},
					"a1CertificateEmail": {
						"type": "string"
					},
					"reportEmail": {
						"type": "string"
					},
					"subfolderPath": {
						"type": "string"
					},
					"website": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_PostOrganisation_": {
				"$ref": "#/components/schemas/SetterPartial_PostOrganisation.NoPost_"
			},
			"SetterPartial_Omit_IOrganisation_mongoose.Types.ObjectId_.logo_.NoPost_": {
				"properties": {
					"companyNumber": {
						"type": "string"
					},
					"bankDetails": {
						"type": "string"
					},
					"a1CertificateEmail": {
						"type": "string"
					},
					"reportEmail": {
						"type": "string"
					},
					"subfolderPath": {
						"type": "string"
					},
					"website": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_Omit_IOrganisation_mongoose.Types.ObjectId_.logo__": {
				"$ref": "#/components/schemas/SetterPartial_Omit_IOrganisation_mongoose.Types.ObjectId_.logo_.NoPost_"
			},
			"GETResponse_HealthInsurance__id_-or-HealthInsurance__id_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/HealthInsurance__id_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/HealthInsurance__id_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IHealthInsurance": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"name",
					"email",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_IHealthInsurance_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"name",
								"email",
								"_id"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_IHealthInsurance_mongoose.Types.ObjectId_.NoPost_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_IHealthInsurance_mongoose.Types.ObjectId__": {
				"$ref": "#/components/schemas/SetterPartial_IHealthInsurance_mongoose.Types.ObjectId_.NoPost_"
			},
			"Expense__id.binary_": {
				"properties": {
					"description": {
						"type": "string"
					},
					"cost": {
						"$ref": "#/components/schemas/Cost__id.binary_"
					},
					"project": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple__id_"
							}
						],
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"description",
					"cost",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HealthCareCost__id.binary_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.HealthCareCostState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/HealthCareCostState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.HealthCareCostState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"patientName": {
						"type": "string"
					},
					"insurance": {
						"$ref": "#/components/schemas/HealthInsurance__id_"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp__id.HealthCareCost__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase__id_"
						},
						"type": "array"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/_id"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/Expense__id.binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"patientName",
					"insurance",
					"addUp",
					"advances",
					"history",
					"historic",
					"expenses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_HealthCareCost__id.binary_-or-HealthCareCost__id.binary_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/HealthCareCost__id.binary_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/HealthCareCost__id.binary_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IHealthCareCost": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.HealthCareCostState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/HealthCareCostState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.HealthCareCostState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"patientName": {
						"type": "string"
					},
					"insurance": {
						"$ref": "#/components/schemas/HealthInsurance__id_"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp__id.HealthCareCost__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase__id_"
						},
						"type": "array"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/_id"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/Expense__id.binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"patientName",
					"insurance",
					"addUp",
					"advances",
					"history",
					"historic",
					"expenses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_IHealthCareCost_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"name",
								"owner",
								"editor",
								"project",
								"comment",
								"bookingRemark",
								"comments",
								"state",
								"log",
								"createdAt",
								"updatedAt",
								"_id",
								"patientName",
								"insurance",
								"addUp",
								"advances",
								"name",
								"owner",
								"editor",
								"project",
								"comment",
								"bookingRemark",
								"comments",
								"state",
								"log",
								"createdAt",
								"updatedAt",
								"_id",
								"history",
								"historic",
								"expenses"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Expense_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"description": {
						"type": "string"
					},
					"cost": {
						"$ref": "#/components/schemas/Cost_mongoose.Types.ObjectId.Binary_"
					},
					"project": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
							}
						],
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"description",
					"cost",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AddUp_mongoose.Types.ObjectId.HealthCareCost__id.binary__": {
				"$ref": "#/components/schemas/AddUpBase_mongoose.Types.ObjectId_"
			},
			"Comment_mongoose.Types.ObjectId.HealthCareCostState_": {
				"properties": {
					"text": {
						"type": "string"
					},
					"author": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"toState": {
						"$ref": "#/components/schemas/HealthCareCostState"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"text",
					"author",
					"toState",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Log_mongoose.Types.ObjectId.HealthCareCostState_": {
				"properties": {},
				"type": "object"
			},
			"HealthCareCost_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"project": {
						"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment_mongoose.Types.ObjectId.HealthCareCostState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/HealthCareCostState"
					},
					"log": {
						"$ref": "#/components/schemas/Log_mongoose.Types.ObjectId.HealthCareCostState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"patientName": {
						"type": "string"
					},
					"insurance": {
						"$ref": "#/components/schemas/HealthInsurance_mongoose.Types.ObjectId_"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp_mongoose.Types.ObjectId.HealthCareCost__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase_mongoose.Types.ObjectId_"
						},
						"type": "array"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/Expense_mongoose.Types.ObjectId.Binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"patientName",
					"insurance",
					"addUp",
					"advances",
					"history",
					"historic",
					"expenses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_Expense_mongoose.Types.ObjectId.Binary_.NoPost_": {
				"properties": {
					"note": {
						"type": "string"
					},
					"cost": {
						"properties": {
							"receipts": {
								"anyOf": [
									{
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									},
									{
										"items": {
											"properties": {
												"data": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/Binary"
														}
													]
												},
												"name": {
													"type": "string"
												},
												"type": {
													"type": "string",
													"enum": [
														"application/pdf",
														"image/jpeg",
														"image/png"
													]
												},
												"_id": {
													"anyOf": [
														{
															"type": "string"
														},
														{
															"$ref": "#/components/schemas/mongoose.Types.ObjectId"
														}
													]
												}
											},
											"type": "object"
										},
										"type": "array"
									}
								]
							},
							"amount": {
								"type": "number",
								"format": "double"
							},
							"currency": {
								"anyOf": [
									{
										"$ref": "#/components/schemas/Currency"
									},
									{
										"$ref": "#/components/schemas/IdDocument_string_"
									}
								]
							},
							"date": {
								"anyOf": [
									{
										"type": "string"
									},
									{
										"type": "string",
										"format": "date-time"
									}
								]
							}
						},
						"type": "object"
					},
					"project": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
							},
							{
								"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
							}
						]
					},
					"description": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_Expense_mongoose.Types.ObjectId.Binary__": {
				"$ref": "#/components/schemas/SetterPartial_Expense_mongoose.Types.ObjectId.Binary_.NoPost_"
			},
			"Expense_mongoose.Types.ObjectId.binary_": {
				"properties": {
					"description": {
						"type": "string"
					},
					"cost": {
						"$ref": "#/components/schemas/Cost_mongoose.Types.ObjectId.binary_"
					},
					"project": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ProjectSimple_mongoose.Types.ObjectId_"
							}
						],
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"description",
					"cost",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"HealthCareCost_mongoose.Types.ObjectId.binary_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"project": {
						"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment_mongoose.Types.ObjectId.HealthCareCostState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/HealthCareCostState"
					},
					"log": {
						"$ref": "#/components/schemas/Log_mongoose.Types.ObjectId.HealthCareCostState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"patientName": {
						"type": "string"
					},
					"insurance": {
						"$ref": "#/components/schemas/HealthInsurance_mongoose.Types.ObjectId_"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp_mongoose.Types.ObjectId.HealthCareCost__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase_mongoose.Types.ObjectId_"
						},
						"type": "array"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/Expense_mongoose.Types.ObjectId.binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"patientName",
					"insurance",
					"addUp",
					"advances",
					"history",
					"historic",
					"expenses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExpenseReport__id.binary_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.ExpenseReportState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/ExpenseReportState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.ExpenseReportState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp__id.ExpenseReport__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase__id_"
						},
						"type": "array"
					},
					"category": {
						"$ref": "#/components/schemas/Category__id_"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/_id"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/Expense__id.binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"addUp",
					"advances",
					"category",
					"history",
					"historic",
					"expenses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_ExpenseReport__id.binary_-or-ExpenseReport__id.binary_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ExpenseReport__id.binary_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/ExpenseReport__id.binary_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IExpenseReport": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.ExpenseReportState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/ExpenseReportState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.ExpenseReportState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp__id.ExpenseReport__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase__id_"
						},
						"type": "array"
					},
					"category": {
						"$ref": "#/components/schemas/Category__id_"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/_id"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/Expense__id.binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"addUp",
					"advances",
					"category",
					"history",
					"historic",
					"expenses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_IExpenseReport_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"name",
								"owner",
								"editor",
								"project",
								"comment",
								"bookingRemark",
								"comments",
								"state",
								"log",
								"createdAt",
								"updatedAt",
								"_id",
								"addUp",
								"advances",
								"category",
								"name",
								"owner",
								"editor",
								"project",
								"comment",
								"bookingRemark",
								"comments",
								"state",
								"log",
								"createdAt",
								"updatedAt",
								"_id",
								"history",
								"historic",
								"expenses"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AddUp_mongoose.Types.ObjectId.ExpenseReport__id.binary__": {
				"$ref": "#/components/schemas/AddUpBase_mongoose.Types.ObjectId_"
			},
			"Category_mongoose.Types.ObjectId_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"style": {
						"$ref": "#/components/schemas/BadgeStyle"
					},
					"isDefault": {
						"type": "boolean"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"name",
					"style",
					"isDefault",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Comment_mongoose.Types.ObjectId.ExpenseReportState_": {
				"properties": {
					"text": {
						"type": "string"
					},
					"author": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"toState": {
						"$ref": "#/components/schemas/ExpenseReportState"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"text",
					"author",
					"toState",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Log_mongoose.Types.ObjectId.ExpenseReportState_": {
				"properties": {},
				"type": "object"
			},
			"ExpenseReport_mongoose.Types.ObjectId.Binary_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"project": {
						"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment_mongoose.Types.ObjectId.ExpenseReportState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/ExpenseReportState"
					},
					"log": {
						"$ref": "#/components/schemas/Log_mongoose.Types.ObjectId.ExpenseReportState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp_mongoose.Types.ObjectId.ExpenseReport__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase_mongoose.Types.ObjectId_"
						},
						"type": "array"
					},
					"category": {
						"$ref": "#/components/schemas/Category_mongoose.Types.ObjectId_"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/Expense_mongoose.Types.ObjectId.Binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"addUp",
					"advances",
					"category",
					"history",
					"historic",
					"expenses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ExpenseReport_mongoose.Types.ObjectId.binary_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"project": {
						"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment_mongoose.Types.ObjectId.ExpenseReportState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/ExpenseReportState"
					},
					"log": {
						"$ref": "#/components/schemas/Log_mongoose.Types.ObjectId.ExpenseReportState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"addUp": {
						"items": {
							"$ref": "#/components/schemas/AddUp_mongoose.Types.ObjectId.ExpenseReport__id.binary__"
						},
						"type": "array"
					},
					"advances": {
						"items": {
							"$ref": "#/components/schemas/AdvanceBase_mongoose.Types.ObjectId_"
						},
						"type": "array"
					},
					"category": {
						"$ref": "#/components/schemas/Category_mongoose.Types.ObjectId_"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"expenses": {
						"items": {
							"$ref": "#/components/schemas/Expense_mongoose.Types.ObjectId.binary_"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"addUp",
					"advances",
					"category",
					"history",
					"historic",
					"expenses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NameDisplayFormat": {
				"type": "string",
				"enum": [
					"givenNameFirst",
					"familyNameFirst"
				]
			},
			"DisplaySettings__id_": {
				"properties": {
					"auth": {
						"properties": {
							"oidc": {
								"type": "boolean"
							},
							"ldapauth": {
								"type": "boolean"
							},
							"microsoft": {
								"type": "boolean"
							},
							"magiclogin": {
								"type": "boolean"
							}
						},
						"required": [
							"oidc",
							"ldapauth",
							"microsoft",
							"magiclogin"
						],
						"type": "object"
					},
					"oidc": {
						"properties": {
							"icon": {
								"type": "string"
							},
							"label": {
								"type": "string"
							}
						},
						"required": [
							"icon",
							"label"
						],
						"type": "object"
					},
					"locale": {
						"properties": {
							"overwrite": {
								"properties": {
									"de": {
										"properties": {},
										"additionalProperties": {
											"type": "string"
										},
										"type": "object"
									},
									"en": {
										"properties": {},
										"additionalProperties": {
											"type": "string"
										},
										"type": "object"
									}
								},
								"required": [
									"de",
									"en"
								],
								"type": "object"
							},
							"fallback": {
								"$ref": "#/components/schemas/Locale"
							},
							"default": {
								"$ref": "#/components/schemas/Locale"
							}
						},
						"required": [
							"overwrite",
							"fallback",
							"default"
						],
						"type": "object"
					},
					"nameDisplayFormat": {
						"$ref": "#/components/schemas/NameDisplayFormat"
					},
					"helpButton": {
						"properties": {
							"customOptions": {
								"items": {
									"properties": {
										"icon": {
											"type": "string"
										},
										"link": {
											"type": "string"
										},
										"label": {
											"type": "string"
										}
									},
									"required": [
										"icon",
										"link",
										"label"
									],
									"type": "object"
								},
								"type": "array"
							},
							"examinersMsTeams": {
								"type": "boolean"
							},
							"examinersMail": {
								"type": "boolean"
							},
							"enabled": {
								"type": "boolean"
							}
						},
						"required": [
							"customOptions",
							"examinersMsTeams",
							"examinersMail",
							"enabled"
						],
						"type": "object"
					},
					"stateColors": {
						"properties": {
							"0": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"10": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"20": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"30": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"40": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"-10": {
								"$ref": "#/components/schemas/BadgeStyle"
							}
						},
						"required": [
							"-10",
							"0",
							"10",
							"20",
							"30",
							"40"
						],
						"type": "object"
					},
					"accessIcons": {
						"properties": {
							"user": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"inWork:expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"inWork:healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"appliedFor:advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"appliedFor:travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"approved:travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"approve/advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"approve/travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"examine/travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"examine/expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"examine/healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"admin": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"user",
							"inWork:expenseReport",
							"inWork:healthCareCost",
							"appliedFor:advance",
							"appliedFor:travel",
							"approved:travel",
							"approve/advance",
							"approve/travel",
							"examine/travel",
							"examine/expenseReport",
							"examine/healthCareCost",
							"book/advance",
							"book/travel",
							"book/expenseReport",
							"book/healthCareCost",
							"admin"
						],
						"type": "object"
					},
					"reportTypeIcons": {
						"properties": {
							"travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"travel",
							"expenseReport",
							"healthCareCost",
							"advance"
						],
						"type": "object"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"auth",
					"oidc",
					"locale",
					"nameDisplayFormat",
					"helpButton",
					"stateColors",
					"accessIcons",
					"reportTypeIcons",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DisplaySettings_mongoose.Types.ObjectId_": {
				"properties": {
					"auth": {
						"properties": {
							"oidc": {
								"type": "boolean"
							},
							"ldapauth": {
								"type": "boolean"
							},
							"microsoft": {
								"type": "boolean"
							},
							"magiclogin": {
								"type": "boolean"
							}
						},
						"required": [
							"oidc",
							"ldapauth",
							"microsoft",
							"magiclogin"
						],
						"type": "object"
					},
					"oidc": {
						"properties": {
							"icon": {
								"type": "string"
							},
							"label": {
								"type": "string"
							}
						},
						"required": [
							"icon",
							"label"
						],
						"type": "object"
					},
					"locale": {
						"properties": {
							"overwrite": {
								"properties": {
									"de": {
										"properties": {},
										"additionalProperties": {
											"type": "string"
										},
										"type": "object"
									},
									"en": {
										"properties": {},
										"additionalProperties": {
											"type": "string"
										},
										"type": "object"
									}
								},
								"required": [
									"de",
									"en"
								],
								"type": "object"
							},
							"fallback": {
								"$ref": "#/components/schemas/Locale"
							},
							"default": {
								"$ref": "#/components/schemas/Locale"
							}
						},
						"required": [
							"overwrite",
							"fallback",
							"default"
						],
						"type": "object"
					},
					"nameDisplayFormat": {
						"$ref": "#/components/schemas/NameDisplayFormat"
					},
					"helpButton": {
						"properties": {
							"customOptions": {
								"items": {
									"properties": {
										"icon": {
											"type": "string"
										},
										"link": {
											"type": "string"
										},
										"label": {
											"type": "string"
										}
									},
									"required": [
										"icon",
										"link",
										"label"
									],
									"type": "object"
								},
								"type": "array"
							},
							"examinersMsTeams": {
								"type": "boolean"
							},
							"examinersMail": {
								"type": "boolean"
							},
							"enabled": {
								"type": "boolean"
							}
						},
						"required": [
							"customOptions",
							"examinersMsTeams",
							"examinersMail",
							"enabled"
						],
						"type": "object"
					},
					"stateColors": {
						"properties": {
							"0": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"10": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"20": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"30": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"40": {
								"$ref": "#/components/schemas/BadgeStyle"
							},
							"-10": {
								"$ref": "#/components/schemas/BadgeStyle"
							}
						},
						"required": [
							"-10",
							"0",
							"10",
							"20",
							"30",
							"40"
						],
						"type": "object"
					},
					"accessIcons": {
						"properties": {
							"user": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"inWork:expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"inWork:healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"appliedFor:advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"appliedFor:travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"approved:travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"approve/advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"approve/travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"examine/travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"examine/expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"examine/healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"admin": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"user",
							"inWork:expenseReport",
							"inWork:healthCareCost",
							"appliedFor:advance",
							"appliedFor:travel",
							"approved:travel",
							"approve/advance",
							"approve/travel",
							"examine/travel",
							"examine/expenseReport",
							"examine/healthCareCost",
							"book/advance",
							"book/travel",
							"book/expenseReport",
							"book/healthCareCost",
							"admin"
						],
						"type": "object"
					},
					"reportTypeIcons": {
						"properties": {
							"travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"travel",
							"expenseReport",
							"healthCareCost",
							"advance"
						],
						"type": "object"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"auth",
					"oidc",
					"locale",
					"nameDisplayFormat",
					"helpButton",
					"stateColors",
					"accessIcons",
					"reportTypeIcons",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_IDisplaySettings_mongoose.Types.ObjectId_.NoPost_": {
				"properties": {
					"reportTypeIcons": {
						"properties": {
							"advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					},
					"accessIcons": {
						"properties": {
							"admin": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"book/advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"examine/healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"examine/expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"examine/travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"approve/travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"approve/advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"approved:travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"appliedFor:travel": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"appliedFor:advance": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"inWork:healthCareCost": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"inWork:expenseReport": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"user": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					},
					"stateColors": {
						"properties": {
							"0": {
								"properties": {
									"color": {
										"type": "string"
									},
									"text": {
										"type": "string",
										"enum": [
											"black",
											"white"
										]
									}
								},
								"type": "object"
							},
							"10": {
								"properties": {
									"color": {
										"type": "string"
									},
									"text": {
										"type": "string",
										"enum": [
											"black",
											"white"
										]
									}
								},
								"type": "object"
							},
							"20": {
								"properties": {
									"color": {
										"type": "string"
									},
									"text": {
										"type": "string",
										"enum": [
											"black",
											"white"
										]
									}
								},
								"type": "object"
							},
							"30": {
								"properties": {
									"color": {
										"type": "string"
									},
									"text": {
										"type": "string",
										"enum": [
											"black",
											"white"
										]
									}
								},
								"type": "object"
							},
							"40": {
								"properties": {
									"color": {
										"type": "string"
									},
									"text": {
										"type": "string",
										"enum": [
											"black",
											"white"
										]
									}
								},
								"type": "object"
							},
							"-10": {
								"properties": {
									"color": {
										"type": "string"
									},
									"text": {
										"type": "string",
										"enum": [
											"black",
											"white"
										]
									}
								},
								"type": "object"
							}
						},
						"type": "object"
					},
					"helpButton": {
						"properties": {
							"customOptions": {
								"items": {
									"properties": {
										"icon": {
											"type": "string"
										},
										"label": {
											"type": "string"
										},
										"link": {
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							},
							"examinersMsTeams": {
								"type": "boolean"
							},
							"examinersMail": {
								"type": "boolean"
							},
							"enabled": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					"nameDisplayFormat": {
						"type": "string",
						"enum": [
							"givenNameFirst",
							"familyNameFirst"
						]
					},
					"locale": {
						"properties": {
							"fallback": {
								"type": "string",
								"enum": [
									"de",
									"en"
								]
							},
							"default": {
								"type": "string",
								"enum": [
									"de",
									"en"
								]
							},
							"overwrite": {
								"properties": {
									"en": {
										"properties": {},
										"additionalProperties": {
											"type": "string"
										},
										"type": "object"
									},
									"de": {
										"properties": {},
										"additionalProperties": {
											"type": "string"
										},
										"type": "object"
									}
								},
								"type": "object"
							}
						},
						"type": "object"
					},
					"auth": {
						"properties": {
							"oidc": {
								"type": "boolean"
							},
							"magiclogin": {
								"type": "boolean"
							},
							"ldapauth": {
								"type": "boolean"
							},
							"microsoft": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					"oidc": {
						"properties": {
							"icon": {
								"type": "string"
							},
							"label": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_IDisplaySettings_mongoose.Types.ObjectId__": {
				"$ref": "#/components/schemas/SetterPartial_IDisplaySettings_mongoose.Types.ObjectId_.NoPost_"
			},
			"GETResponse_Currency-or-Currency-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Currency"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Currency"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICurrency": {
				"properties": {
					"name": {
						"properties": {
							"en": {
								"type": "string"
							},
							"de": {
								"type": "string"
							}
						},
						"required": [
							"en",
							"de"
						],
						"type": "object"
					},
					"_id": {
						"$ref": "#/components/schemas/CurrencyCode"
					},
					"subunit": {
						"type": "string",
						"nullable": true
					},
					"symbol": {
						"type": "string",
						"nullable": true
					},
					"flag": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_ICurrency_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"name",
								"_id",
								"subunit",
								"symbol",
								"flag"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_ICurrency.NoPost_": {
				"properties": {
					"flag": {
						"type": "string"
					},
					"subunit": {
						"type": "string"
					},
					"name": {
						"properties": {
							"en": {
								"type": "string"
							},
							"de": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"_id": {
						"type": "string"
					},
					"symbol": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"SetterBody_ICurrency_": {
				"$ref": "#/components/schemas/SetterPartial_ICurrency.NoPost_"
			},
			"LumpSum": {
				"properties": {
					"catering8": {
						"type": "number",
						"format": "double"
					},
					"catering24": {
						"type": "number",
						"format": "double"
					},
					"overnight": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"catering8",
					"catering24",
					"overnight"
				],
				"type": "object"
			},
			"CountryLumpSum": {
				"properties": {
					"catering8": {
						"type": "number",
						"format": "double"
					},
					"catering24": {
						"type": "number",
						"format": "double"
					},
					"overnight": {
						"type": "number",
						"format": "double"
					},
					"validFrom": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"specials": {
						"items": {
							"allOf": [
								{
									"properties": {
										"city": {
											"type": "string"
										}
									},
									"required": [
										"city"
									],
									"type": "object"
								},
								{
									"$ref": "#/components/schemas/LumpSum"
								}
							]
						},
						"type": "array"
					}
				},
				"required": [
					"catering8",
					"catering24",
					"overnight",
					"validFrom"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Country": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/CountryCode"
					},
					"name": {
						"properties": {
							"en": {
								"type": "string"
							},
							"de": {
								"type": "string"
							}
						},
						"required": [
							"en",
							"de"
						],
						"type": "object"
					},
					"needsA1Certificate": {
						"type": "boolean",
						"nullable": true
					},
					"alias": {
						"properties": {
							"en": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"de": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"de"
						],
						"type": "object"
					},
					"flag": {
						"type": "string",
						"nullable": true
					},
					"currency": {
						"allOf": [
							{
								"$ref": "#/components/schemas/CurrencyCode"
							}
						],
						"nullable": true
					},
					"lumpSums": {
						"items": {
							"$ref": "#/components/schemas/CountryLumpSum"
						},
						"type": "array"
					},
					"lumpSumsFrom": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"_id",
					"name",
					"lumpSums"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_Country-or-Country-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Country"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Country"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICountry": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/CountryCode"
					},
					"name": {
						"properties": {
							"en": {
								"type": "string"
							},
							"de": {
								"type": "string"
							}
						},
						"required": [
							"en",
							"de"
						],
						"type": "object"
					},
					"needsA1Certificate": {
						"type": "boolean",
						"nullable": true
					},
					"alias": {
						"properties": {
							"en": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"de": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"de"
						],
						"type": "object"
					},
					"flag": {
						"type": "string",
						"nullable": true
					},
					"currency": {
						"allOf": [
							{
								"$ref": "#/components/schemas/CurrencyCode"
							}
						],
						"nullable": true
					},
					"lumpSums": {
						"items": {
							"$ref": "#/components/schemas/CountryLumpSum"
						},
						"type": "array"
					},
					"lumpSumsFrom": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"_id",
					"name",
					"lumpSums"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_ICountry_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"_id",
								"name",
								"needsA1Certificate",
								"alias",
								"flag",
								"currency",
								"lumpSums",
								"lumpSumsFrom"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_ICountry.NoPost_": {
				"properties": {
					"lumpSumsFrom": {
						"type": "string"
					},
					"lumpSums": {
						"items": {
							"properties": {
								"specials": {
									"items": {
										"properties": {
											"city": {
												"type": "string"
											},
											"overnight": {
												"type": "number",
												"format": "double"
											},
											"catering24": {
												"type": "number",
												"format": "double"
											},
											"catering8": {
												"type": "number",
												"format": "double"
											}
										},
										"type": "object"
									},
									"type": "array"
								},
								"validFrom": {
									"anyOf": [
										{
											"type": "string"
										},
										{
											"type": "string",
											"format": "date-time"
										}
									]
								},
								"overnight": {
									"type": "number",
									"format": "double"
								},
								"catering24": {
									"type": "number",
									"format": "double"
								},
								"catering8": {
									"type": "number",
									"format": "double"
								}
							},
							"type": "object"
						},
						"type": "array"
					},
					"currency": {
						"type": "string"
					},
					"needsA1Certificate": {
						"type": "boolean"
					},
					"flag": {
						"type": "string"
					},
					"alias": {
						"properties": {
							"en": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"de": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					},
					"name": {
						"properties": {
							"en": {
								"type": "string"
							},
							"de": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"_id": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"SetterBody_ICountry_": {
				"$ref": "#/components/schemas/SetterPartial_ICountry.NoPost_"
			},
			"microsoftSettings": {
				"properties": {
					"clientId": {
						"type": "string"
					},
					"clientSecret": {
						"type": "string"
					},
					"tenant": {
						"type": "string"
					}
				},
				"required": [
					"clientId",
					"clientSecret",
					"tenant"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ldapauthSettings": {
				"properties": {
					"url": {
						"type": "string"
					},
					"bindDN": {
						"type": "string"
					},
					"bindCredentials": {
						"type": "string"
					},
					"searchBase": {
						"type": "string"
					},
					"searchFilter": {
						"type": "string"
					},
					"tlsOptions": {
						"properties": {
							"rejectUnauthorized": {
								"type": "boolean"
							}
						},
						"required": [
							"rejectUnauthorized"
						],
						"type": "object"
					},
					"mailAttribute": {
						"type": "string"
					},
					"uidAttribute": {
						"type": "string"
					},
					"familyNameAttribute": {
						"type": "string"
					},
					"givenNameAttribute": {
						"type": "string"
					}
				},
				"required": [
					"url",
					"bindDN",
					"bindCredentials",
					"searchBase",
					"searchFilter",
					"tlsOptions",
					"mailAttribute",
					"uidAttribute",
					"familyNameAttribute",
					"givenNameAttribute"
				],
				"type": "object",
				"additionalProperties": false
			},
			"oidcSettings": {
				"properties": {
					"server": {
						"type": "string"
					},
					"clientId": {
						"type": "string"
					},
					"clientSecret": {
						"type": "string"
					}
				},
				"required": [
					"server",
					"clientId",
					"clientSecret"
				],
				"type": "object",
				"additionalProperties": false
			},
			"smtpSettings": {
				"properties": {
					"host": {
						"type": "string"
					},
					"port": {
						"type": "number",
						"format": "double"
					},
					"secure": {
						"type": "boolean"
					},
					"user": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"senderAddress": {
						"type": "string"
					}
				},
				"required": [
					"host",
					"port",
					"secure",
					"user",
					"password",
					"senderAddress"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ConnectionSettings__id_": {
				"properties": {
					"PDFReportsViaEmail": {
						"properties": {
							"locale": {
								"$ref": "#/components/schemas/Locale"
							},
							"sendPDFReportsToOrganisationEmail": {
								"type": "boolean"
							}
						},
						"required": [
							"locale",
							"sendPDFReportsToOrganisationEmail"
						],
						"type": "object"
					},
					"auth": {
						"properties": {
							"oidc": {
								"allOf": [
									{
										"$ref": "#/components/schemas/oidcSettings"
									}
								],
								"nullable": true
							},
							"ldapauth": {
								"allOf": [
									{
										"$ref": "#/components/schemas/ldapauthSettings"
									}
								],
								"nullable": true
							},
							"microsoft": {
								"allOf": [
									{
										"$ref": "#/components/schemas/microsoftSettings"
									}
								],
								"nullable": true
							}
						},
						"type": "object"
					},
					"smtp": {
						"allOf": [
							{
								"$ref": "#/components/schemas/smtpSettings"
							}
						],
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"PDFReportsViaEmail",
					"auth",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ConnectionSettings_mongoose.Types.ObjectId_": {
				"properties": {
					"PDFReportsViaEmail": {
						"properties": {
							"locale": {
								"$ref": "#/components/schemas/Locale"
							},
							"sendPDFReportsToOrganisationEmail": {
								"type": "boolean"
							}
						},
						"required": [
							"locale",
							"sendPDFReportsToOrganisationEmail"
						],
						"type": "object"
					},
					"auth": {
						"properties": {
							"oidc": {
								"allOf": [
									{
										"$ref": "#/components/schemas/oidcSettings"
									}
								],
								"nullable": true
							},
							"ldapauth": {
								"allOf": [
									{
										"$ref": "#/components/schemas/ldapauthSettings"
									}
								],
								"nullable": true
							},
							"microsoft": {
								"allOf": [
									{
										"$ref": "#/components/schemas/microsoftSettings"
									}
								],
								"nullable": true
							}
						},
						"type": "object"
					},
					"smtp": {
						"allOf": [
							{
								"$ref": "#/components/schemas/smtpSettings"
							}
						],
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"PDFReportsViaEmail",
					"auth",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IConnectionSettings": {
				"properties": {
					"PDFReportsViaEmail": {
						"properties": {
							"locale": {
								"$ref": "#/components/schemas/Locale"
							},
							"sendPDFReportsToOrganisationEmail": {
								"type": "boolean"
							}
						},
						"required": [
							"locale",
							"sendPDFReportsToOrganisationEmail"
						],
						"type": "object"
					},
					"auth": {
						"properties": {
							"oidc": {
								"allOf": [
									{
										"$ref": "#/components/schemas/oidcSettings"
									}
								],
								"nullable": true
							},
							"ldapauth": {
								"allOf": [
									{
										"$ref": "#/components/schemas/ldapauthSettings"
									}
								],
								"nullable": true
							},
							"microsoft": {
								"allOf": [
									{
										"$ref": "#/components/schemas/microsoftSettings"
									}
								],
								"nullable": true
							}
						},
						"type": "object"
					},
					"smtp": {
						"allOf": [
							{
								"$ref": "#/components/schemas/smtpSettings"
							}
						],
						"nullable": true
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"PDFReportsViaEmail",
					"auth",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_Category__id_-or-Category__id_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Category__id_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Category__id_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ICategory": {
				"properties": {
					"name": {
						"type": "string"
					},
					"style": {
						"$ref": "#/components/schemas/BadgeStyle"
					},
					"isDefault": {
						"type": "boolean"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"name",
					"style",
					"isDefault",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_ICategory_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"name",
								"style",
								"isDefault",
								"_id"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SetterPartial_ICategory_mongoose.Types.ObjectId_.NoPost_": {
				"properties": {
					"isDefault": {
						"type": "boolean"
					},
					"style": {
						"properties": {
							"color": {
								"type": "string"
							},
							"text": {
								"type": "string",
								"enum": [
									"black",
									"white"
								]
							}
						},
						"type": "object"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/mongoose.Types.ObjectId"
							}
						]
					}
				},
				"type": "object"
			},
			"SetterBody_ICategory_mongoose.Types.ObjectId__": {
				"$ref": "#/components/schemas/SetterPartial_ICategory_mongoose.Types.ObjectId_.NoPost_"
			},
			"ApprovedTravel__id_": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"destinationPlace": {
						"$ref": "#/components/schemas/Omit_Place.special_"
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"claimSpouseRefund": {
						"type": "boolean",
						"nullable": true
					},
					"fellowTravelersNames": {
						"type": "string",
						"nullable": true
					},
					"traveler": {
						"type": "string"
					},
					"reportId": {
						"$ref": "#/components/schemas/_id"
					},
					"organisationId": {
						"$ref": "#/components/schemas/_id"
					},
					"appliedForOn": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"approvedBy": {
						"type": "string"
					},
					"approvedOn": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"required": [
					"reason",
					"destinationPlace",
					"startDate",
					"endDate",
					"traveler",
					"organisationId",
					"appliedForOn",
					"approvedBy",
					"approvedOn"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_ApprovedTravel__id_-or-ApprovedTravel__id_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ApprovedTravel__id_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/ApprovedTravel__id_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IApprovedTravel": {
				"properties": {
					"reason": {
						"type": "string"
					},
					"destinationPlace": {
						"$ref": "#/components/schemas/Omit_Place.special_"
					},
					"startDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"endDate": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"claimSpouseRefund": {
						"type": "boolean",
						"nullable": true
					},
					"fellowTravelersNames": {
						"type": "string",
						"nullable": true
					},
					"traveler": {
						"type": "string"
					},
					"reportId": {
						"$ref": "#/components/schemas/_id"
					},
					"organisationId": {
						"$ref": "#/components/schemas/_id"
					},
					"appliedForOn": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"approvedBy": {
						"type": "string"
					},
					"approvedOn": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"required": [
					"reason",
					"destinationPlace",
					"startDate",
					"endDate",
					"traveler",
					"organisationId",
					"appliedForOn",
					"approvedBy",
					"approvedOn"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_IApprovedTravel_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"reason",
								"destinationPlace",
								"startDate",
								"endDate",
								"claimSpouseRefund",
								"fellowTravelersNames",
								"traveler",
								"reportId",
								"organisationId",
								"appliedForOn",
								"approvedBy",
								"approvedOn"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_Advance__id_-or-Advance__id_-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Advance__id_"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Advance__id_"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IAdvance": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple__id_"
					},
					"project": {
						"$ref": "#/components/schemas/Project__id_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment__id.AdvanceState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/AdvanceState"
					},
					"log": {
						"$ref": "#/components/schemas/Log__id.AdvanceState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/_id"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"budget": {
						"$ref": "#/components/schemas/MoneyNotNull"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"reason": {
						"type": "string"
					},
					"settledOn": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"offsetAgainst": {
						"items": {
							"properties": {
								"amount": {
									"type": "number",
									"format": "double"
								},
								"report": {
									"properties": {
										"name": {
											"type": "string"
										},
										"_id": {
											"$ref": "#/components/schemas/_id"
										}
									},
									"required": [
										"name",
										"_id"
									],
									"type": "object",
									"nullable": true
								},
								"type": {
									"$ref": "#/components/schemas/ReportModelName"
								}
							},
							"required": [
								"amount",
								"type"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"history",
					"historic",
					"budget",
					"balance",
					"reason",
					"offsetAgainst"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_IAdvance_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"default": 0,
						"minimum": 0
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"default": 1,
						"minimum": 1
					},
					"_id": {
						"type": "string"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"name",
								"owner",
								"editor",
								"project",
								"comment",
								"bookingRemark",
								"comments",
								"state",
								"log",
								"createdAt",
								"updatedAt",
								"_id",
								"history",
								"historic",
								"name",
								"owner",
								"editor",
								"project",
								"comment",
								"bookingRemark",
								"comments",
								"state",
								"log",
								"createdAt",
								"updatedAt",
								"_id",
								"name",
								"budget",
								"project",
								"balance",
								"reason",
								"state",
								"settledOn",
								"_id",
								"offsetAgainst"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					},
					"sortJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AdvanceApplication": {
				"properties": {
					"project": {
						"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"name": {
						"type": "string"
					},
					"budget": {
						"$ref": "#/components/schemas/MoneyPost"
					},
					"reason": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					}
				},
				"required": [
					"reason"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Comment_mongoose.Types.ObjectId.AdvanceState_": {
				"properties": {
					"text": {
						"type": "string"
					},
					"author": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"toState": {
						"$ref": "#/components/schemas/AdvanceState"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"text",
					"author",
					"toState",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Log_mongoose.Types.ObjectId.AdvanceState_": {
				"properties": {},
				"type": "object"
			},
			"Advance_mongoose.Types.ObjectId_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"owner": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"editor": {
						"$ref": "#/components/schemas/UserSimple_mongoose.Types.ObjectId_"
					},
					"project": {
						"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"bookingRemark": {
						"type": "string",
						"nullable": true
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment_mongoose.Types.ObjectId.AdvanceState_"
						},
						"type": "array"
					},
					"state": {
						"$ref": "#/components/schemas/AdvanceState"
					},
					"log": {
						"$ref": "#/components/schemas/Log_mongoose.Types.ObjectId.AdvanceState_"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"updatedAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"history": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"historic": {
						"type": "boolean"
					},
					"budget": {
						"$ref": "#/components/schemas/MoneyNotNull"
					},
					"balance": {
						"$ref": "#/components/schemas/BaseCurrencyMoneyNotNull"
					},
					"reason": {
						"type": "string"
					},
					"settledOn": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"offsetAgainst": {
						"items": {
							"properties": {
								"amount": {
									"type": "number",
									"format": "double"
								},
								"report": {
									"properties": {
										"name": {
											"type": "string"
										},
										"_id": {
											"$ref": "#/components/schemas/mongoose.Types.ObjectId"
										}
									},
									"required": [
										"name",
										"_id"
									],
									"type": "object",
									"nullable": true
								},
								"type": {
									"$ref": "#/components/schemas/ReportModelName"
								}
							},
							"required": [
								"amount",
								"type"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"owner",
					"editor",
					"project",
					"comments",
					"state",
					"log",
					"createdAt",
					"updatedAt",
					"_id",
					"history",
					"historic",
					"budget",
					"balance",
					"reason",
					"offsetAgainst"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"httpBearer": {
				"type": "http",
				"scheme": "bearer"
			},
			"cookieAuth": {
				"type": "apiKey",
				"name": "abrechnung",
				"in": "cookie"
			}
		}
	},
	"info": {
		"title": "abrechnung-backend",
		"version": "2.1.13",
		"contact": {}
	},
	"paths": {
		"/user": {
			"get": {
				"operationId": "GetMe",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/User__id.binary_"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/user/token": {
			"get": {
				"operationId": "GetUploadToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			},
			"delete": {
				"operationId": "DeleteUploadToken",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "PostUploadToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"updatedAt": {
															"$ref": "#/components/schemas/NativeDate"
														},
														"createdAt": {
															"$ref": "#/components/schemas/NativeDate"
														}
													},
													"required": [
														"updatedAt",
														"createdAt"
													],
													"type": "object"
												},
												{
													"properties": {
														"expireAt": {
															"$ref": "#/components/schemas/NativeDate"
														},
														"files": {
															"items": {
																"$ref": "#/components/schemas/mongoose.Types.ObjectId"
															},
															"type": "array"
														}
													},
													"required": [
														"files"
													],
													"type": "object"
												},
												{
													"properties": {
														"_id": {
															"$ref": "#/components/schemas/mongoose.Types.ObjectId"
														}
													},
													"required": [
														"_id"
													],
													"type": "object"
												},
												{
													"properties": {
														"__v": {
															"type": "number",
															"format": "double"
														}
													},
													"required": [
														"__v"
													],
													"type": "object"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/user/settings": {
			"post": {
				"operationId": "PostSettings",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_IUser-at-settings_"
							}
						}
					}
				}
			}
		},
		"/user/vehicleRegistration": {
			"post": {
				"operationId": "PostVehicleRegistration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"properties": {
									"vehicleRegistration": {
										"items": {
											"$ref": "#/components/schemas/File"
										},
										"type": "array"
									}
								},
								"required": [
									"vehicleRegistration"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/user/subscription": {
			"post": {
				"operationId": "PostPushNotificationSubscription",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/PushSubscription"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PushSubscription"
							}
						}
					}
				}
			}
		},
		"/user/httpBearer": {
			"post": {
				"operationId": "GenOwnApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/users": {
			"get": {
				"operationId": "GetNamesAndProjects",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_User__id.binary_-or-User__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user",
							"approve/advance"
						]
					},
					{
						"httpBearer": [
							"user",
							"approve/advance"
						]
					},
					{
						"cookieAuth": [
							"user",
							"approve/travel"
						]
					},
					{
						"httpBearer": [
							"user",
							"approve/travel"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/travel"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/expenseReport"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/healthCareCost"
						]
					},
					{
						"cookieAuth": [
							"user",
							"book/advance"
						]
					},
					{
						"httpBearer": [
							"user",
							"book/advance"
						]
					},
					{
						"cookieAuth": [
							"user",
							"book/expenseReport"
						]
					},
					{
						"httpBearer": [
							"user",
							"book/expenseReport"
						]
					},
					{
						"cookieAuth": [
							"user",
							"book/travel"
						]
					},
					{
						"httpBearer": [
							"user",
							"book/travel"
						]
					},
					{
						"cookieAuth": [
							"user",
							"book/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"user",
							"book/healthCareCost"
						]
					},
					{
						"cookieAuth": [
							"user",
							"admin"
						]
					},
					{
						"httpBearer": [
							"user",
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"email",
									"name",
									"_id",
									"fk",
									"access",
									"projects",
									"loseAccessAt",
									"settings",
									"vehicleRegistration",
									"token"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/user": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_User__id.binary_-or-User__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"email",
									"name",
									"_id",
									"fk",
									"access",
									"projects",
									"loseAccessAt",
									"settings",
									"vehicleRegistration",
									"token"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/User__id.binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBodyUser"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/user/httpBearer": {
			"post": {
				"operationId": "GenAnyApiKey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"userId": {
										"$ref": "#/components/schemas/IdDocument"
									}
								},
								"required": [
									"userId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/admin/user/bulk": {
			"post": {
				"operationId": "PostMany",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/User__id.binary_"
											},
											"type": "array"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/SetterBodyUser"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/admin/user/merge": {
			"post": {
				"operationId": "Merge",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										},
										"result": {
											"properties": {
												"deleteResult": {
													"$ref": "#/components/schemas/DeleteResult"
												},
												"replacedReferences": {
													"$ref": "#/components/schemas/UserReplaceReferencesResult"
												},
												"mergedUser": {
													"$ref": "#/components/schemas/User__id.binary_"
												}
											},
											"required": [
												"deleteResult",
												"replacedReferences",
												"mergedUser"
											],
											"type": "object"
										}
									},
									"required": [
										"message",
										"result"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "delOverwritten",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"userIdToOverwrite": {
										"$ref": "#/components/schemas/IdDocument"
									},
									"userId": {
										"$ref": "#/components/schemas/IdDocument"
									}
								},
								"required": [
									"userIdToOverwrite",
									"userId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/admin/user/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/upload/new": {
			"get": {
				"operationId": "GetUploadPage",
				"responses": {
					"200": {
						"description": ""
					}
				},
				"tags": [
					"Upload"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ownerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostFiles",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Upload"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ownerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"properties": {
									"files": {
										"items": {
											"$ref": "#/components/schemas/File"
										},
										"type": "array"
									}
								},
								"required": [
									"files"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/travelSettings": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/TravelSettings__id_"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/admin/travelSettings": {
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/TravelSettings_mongoose.Types.ObjectId_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_ITravelSettings_mongoose.Types.ObjectId__"
							}
						}
					}
				}
			}
		},
		"/admin/travelSettings/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/travel": {
			"get": {
				"operationId": "GetOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Travel__id.binary_-or-Travel__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"reason",
									"destinationPlace",
									"startDate",
									"endDate",
									"claimSpouseRefund",
									"fellowTravelersNames",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"progress",
									"addUp",
									"advances",
									"isCrossBorder",
									"a1Certificate",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"lastPlaceOfWork",
									"professionalShare",
									"stages",
									"expenses",
									"days"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostLumpSums",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody__days-TravelPost-at-days--lastPlaceOfWork-TravelPost-at-lastPlaceOfWork--_id-TravelPost_91__id_93___"
							}
						}
					}
				}
			}
		},
		"/travel/expense": {
			"post": {
				"operationId": "PostExpenseToOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_TravelExpense_mongoose.Types.ObjectId.Binary__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteExpeneseFromOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/travel/stage": {
			"post": {
				"operationId": "PostStageToOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_Stage_mongoose.Types.ObjectId.Binary__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteStageFromOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/travel/appliedFor": {
			"post": {
				"operationId": "PostOwnInWork",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TravelApplication"
							}
						}
					}
				}
			}
		},
		"/travel/approved": {
			"post": {
				"operationId": "PostOwnApproved",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TravelApplication"
							}
						}
					}
				}
			}
		},
		"/travel/underExamination": {
			"post": {
				"operationId": "PostOwnUnderExamination",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/travel/report": {
			"get": {
				"operationId": "GetOwnReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/travel/examiner": {
			"get": {
				"operationId": "GetExaminer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_UserWithName__id_-or-UserWithName__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/approve/travel": {
			"get": {
				"operationId": "GetToApprove",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Travel__id.binary_-or-Travel__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/travel"
						]
					},
					{
						"httpBearer": [
							"approve/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"reason",
									"destinationPlace",
									"startDate",
									"endDate",
									"claimSpouseRefund",
									"fellowTravelersNames",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"progress",
									"addUp",
									"advances",
									"isCrossBorder",
									"a1Certificate",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"lastPlaceOfWork",
									"professionalShare",
									"stages",
									"expenses",
									"days"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/approve/travel/approved": {
			"post": {
				"operationId": "PostAnyBackApproved",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel__id.binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/travel"
						]
					},
					{
						"httpBearer": [
							"approve/travel"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"anyOf": [
											{
												"allOf": [
													{
														"$ref": "#/components/schemas/TravelApplication"
													},
													{
														"properties": {
															"owner": {
																"$ref": "#/components/schemas/IdDocument"
															}
														},
														"required": [
															"owner"
														],
														"type": "object"
													}
												]
											},
											{
												"properties": {
													"_id": {
														"type": "string"
													}
												},
												"required": [
													"_id"
												],
												"type": "object"
											}
										]
									},
									{
										"properties": {
											"comment": {
												"type": "string"
											}
										},
										"type": "object"
									}
								]
							}
						}
					}
				}
			}
		},
		"/approve/travel/rejected": {
			"post": {
				"operationId": "PostAnyRejected",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/travel"
						]
					},
					{
						"httpBearer": [
							"approve/travel"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/travel": {
			"get": {
				"operationId": "GetToExamine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Travel__id.binary_-or-Travel__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"reason",
									"destinationPlace",
									"startDate",
									"endDate",
									"claimSpouseRefund",
									"fellowTravelersNames",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"progress",
									"addUp",
									"advances",
									"isCrossBorder",
									"a1Certificate",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"lastPlaceOfWork",
									"professionalShare",
									"stages",
									"expenses",
									"days"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_TravelPost_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/examine/travel/expense": {
			"post": {
				"operationId": "PostExpenseToAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_TravelExpense_mongoose.Types.ObjectId.Binary__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteExpeneseFromAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/examine/travel/stage": {
			"post": {
				"operationId": "PostStageToAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_Stage_mongoose.Types.ObjectId.Binary__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteStageFromAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/examine/travel/reviewCompleted": {
			"post": {
				"operationId": "PostReviewCompleted",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel_mongoose.Types.ObjectId.binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"bookingRemark": {
										"type": "string",
										"nullable": true
									},
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/travel/approved": {
			"post": {
				"operationId": "PostAnyApproved",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Travel__id.binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/travel/underExamination": {
			"post": {
				"operationId": "PostAnyUnderExamination",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/travel/report": {
			"get": {
				"operationId": "GetReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"examine/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/travel": {
			"get": {
				"operationId": "GetBookable",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Travel__id.binary_-or-Travel__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"book/travel"
						]
					},
					{
						"httpBearer": [
							"book/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"reason",
									"destinationPlace",
									"startDate",
									"endDate",
									"claimSpouseRefund",
									"fellowTravelersNames",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"progress",
									"addUp",
									"advances",
									"isCrossBorder",
									"a1Certificate",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"lastPlaceOfWork",
									"professionalShare",
									"stages",
									"expenses",
									"days"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/travel/report": {
			"get": {
				"operationId": "GetBookableReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"book/travel"
						]
					},
					{
						"httpBearer": [
							"book/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/travel/booked": {
			"post": {
				"operationId": "PostBooked",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										},
										"result": {
											"items": {
												"properties": {
													"reason": {},
													"status": {
														"type": "string",
														"enum": [
															"rejected",
															"fulfilled"
														]
													}
												},
												"required": [
													"reason",
													"status"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"message",
										"result"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"book/travel"
						]
					},
					{
						"httpBearer": [
							"book/travel"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/IdDocument_string_"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/settings": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/Settings__id_"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/admin/settings": {
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Settings_mongoose.Types.ObjectId_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_Omit_ISettings_mongoose.Types.ObjectId_.version-or-migrateFrom__"
							}
						}
					}
				}
			}
		},
		"/admin/settings/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/project": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_ProjectSimpleWithName__id_-or-ProjectSimpleWithName__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Project"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"identifier",
									"organisation",
									"_id"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/project": {
			"get": {
				"operationId": "GetComplete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Project__id_-or-Project__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Project"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"identifier",
									"organisation",
									"_id",
									"name",
									"balance",
									"budget"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Project"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_ProjectWithUsers_mongoose.Types.ObjectId__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Project"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/project/bulk": {
			"post": {
				"operationId": "PostMany",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/Project_mongoose.Types.ObjectId_"
											},
											"type": "array"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Project"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/SetterBody_IProject_mongoose.Types.ObjectId__"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/admin/project/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Project"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/printerSettings": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/PrinterSettings__id_"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Printer Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/admin/printerSettings": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/PrinterSettings__id_"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Printer Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/PrinterSettings_mongoose.Types.ObjectId_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Printer Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_IPrinterSettings_mongoose.Types.ObjectId__"
							}
						}
					}
				}
			}
		},
		"/admin/printerSettings/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Printer Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/organisation": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Organisation__id.binary_-or-Organisation__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Organisation"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"_id",
									"subfolderPath",
									"reportEmail",
									"a1CertificateEmail",
									"bankDetails",
									"companyNumber",
									"logo",
									"website"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/organisation": {
			"get": {
				"operationId": "GetComplete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Organisation__id.binary_-or-Organisation__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Organisation"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"_id",
									"subfolderPath",
									"reportEmail",
									"a1CertificateEmail",
									"bankDetails",
									"companyNumber",
									"logo",
									"website"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Organisation_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Organisation"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_PostOrganisation_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Organisation"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/organisation/bulk": {
			"post": {
				"operationId": "PostMany",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/Organisation_mongoose.Types.ObjectId.Binary_"
											},
											"type": "array"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Organisation"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/SetterBody_Omit_IOrganisation_mongoose.Types.ObjectId_.logo__"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/admin/organisation/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Organisation"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/healthInsurance": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_HealthInsurance__id_-or-HealthInsurance__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Heath Insurance"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"email",
									"_id"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/healthInsurance": {
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/HealthInsurance_mongoose.Types.ObjectId_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Heath Insurance"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_IHealthInsurance_mongoose.Types.ObjectId__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Heath Insurance"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/healthInsurance/bulk": {
			"post": {
				"operationId": "PostMany",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/HealthInsurance_mongoose.Types.ObjectId_"
											},
											"type": "array"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Heath Insurance"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/SetterBody_IHealthInsurance_mongoose.Types.ObjectId__"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/admin/healthInsurance/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Heath Insurance"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/healthCareCost": {
			"get": {
				"operationId": "GetOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_HealthCareCost__id.binary_-or-HealthCareCost__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"patientName",
									"insurance",
									"addUp",
									"advances",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"expenses"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/healthCareCost/expense": {
			"post": {
				"operationId": "PostExpenseToOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/HealthCareCost_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_Expense_mongoose.Types.ObjectId.Binary__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteExpeneseFromOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/HealthCareCost_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/healthCareCost/inWork": {
			"post": {
				"operationId": "PostOwnInWork",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/HealthCareCost_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"advances": {
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									},
									"name": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									},
									"patientName": {
										"type": "string"
									},
									"insurance": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									},
									"project": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/healthCareCost/underExamination": {
			"post": {
				"operationId": "PostOwnUnderExamination",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/healthCareCost/report": {
			"get": {
				"operationId": "GetReportFromOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/healthCareCost/examiner": {
			"get": {
				"operationId": "GetExaminer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_UserWithName__id_-or-UserWithName__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/examine/healthCareCost": {
			"get": {
				"operationId": "GetToExamine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_HealthCareCost__id.binary_-or-HealthCareCost__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"patientName",
									"insurance",
									"addUp",
									"advances",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"expenses"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/HealthCareCost_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"advances": {
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									},
									"name": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									},
									"patientName": {
										"type": "string"
									},
									"insurance": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									},
									"project": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/healthCareCost/expense": {
			"post": {
				"operationId": "PostExpenseToAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/HealthCareCost_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_Expense_mongoose.Types.ObjectId.Binary__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteExpenseFromAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/HealthCareCost_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/examine/healthCareCost/inWork": {
			"post": {
				"operationId": "PostBackInWork",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/HealthCareCost__id.binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"advances": {
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									},
									"comment": {
										"type": "string"
									},
									"owner": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									},
									"name": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									},
									"patientName": {
										"type": "string"
									},
									"insurance": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									},
									"project": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/healthCareCost/reviewCompleted": {
			"post": {
				"operationId": "PostReviewCompleted",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/HealthCareCost_mongoose.Types.ObjectId.binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"bookingRemark": {
										"type": "string",
										"nullable": true
									},
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/healthCareCost/underExamination": {
			"post": {
				"operationId": "PostOwnUnderExamination",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/healthCareCost/report": {
			"get": {
				"operationId": "GetReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/examine/healthCareCost/organisation": {
			"get": {
				"operationId": "GetOrganisation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Organisation__id.binary_-or-Organisation__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"_id",
									"subfolderPath",
									"reportEmail",
									"a1CertificateEmail",
									"bankDetails",
									"companyNumber",
									"logo",
									"website"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/healthCareCost": {
			"get": {
				"operationId": "GetBookable",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_HealthCareCost__id.binary_-or-HealthCareCost__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"book/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"book/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"patientName",
									"insurance",
									"addUp",
									"advances",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"expenses"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/healthCareCost/report": {
			"get": {
				"operationId": "GetBookableReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"book/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"book/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/healthCareCost/booked": {
			"post": {
				"operationId": "PostBooked",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										},
										"result": {
											"items": {
												"properties": {
													"reason": {},
													"status": {
														"type": "string",
														"enum": [
															"rejected",
															"fulfilled"
														]
													}
												},
												"required": [
													"reason",
													"status"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"message",
										"result"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Health Care Cost"
				],
				"security": [
					{
						"cookieAuth": [
							"book/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"book/healthCareCost"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/IdDocument_string_"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/expenseReport": {
			"get": {
				"operationId": "GetOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_ExpenseReport__id.binary_-or-ExpenseReport__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"addUp",
									"advances",
									"category",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"expenses"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/expenseReport/expense": {
			"post": {
				"operationId": "PostExpenseToOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/ExpenseReport_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_Expense_mongoose.Types.ObjectId.Binary__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteExpenseFromOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/ExpenseReport_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/expenseReport/inWork": {
			"post": {
				"operationId": "PostOwnInWork",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/ExpenseReport_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"category": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									},
									"advances": {
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									},
									"name": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									},
									"project": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/expenseReport/underExamination": {
			"post": {
				"operationId": "PostOwnUnderExamination",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/expenseReport/report": {
			"get": {
				"operationId": "GetReportForOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/expenseReport/examiner": {
			"get": {
				"operationId": "GetExaminer",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_UserWithName__id_-or-UserWithName__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/examine/expenseReport": {
			"get": {
				"operationId": "GetToExamine",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_ExpenseReport__id.binary_-or-ExpenseReport__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"examine/expenseReport"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"addUp",
									"advances",
									"category",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"expenses"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"examine/expenseReport"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/ExpenseReport_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"examine/expenseReport"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"category": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									},
									"advances": {
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									},
									"name": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									},
									"project": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/expenseReport/expense": {
			"post": {
				"operationId": "PostExpenseToAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/ExpenseReport_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"examine/expenseReport"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_Expense_mongoose.Types.ObjectId.Binary__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteExpenseFromAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/ExpenseReport_mongoose.Types.ObjectId.Binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"examine/expenseReport"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/examine/expenseReport/inWork": {
			"post": {
				"operationId": "PostBackInWork",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/ExpenseReport__id.binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"examine/expenseReport"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"owner": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									},
									"category": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									},
									"advances": {
										"items": {
											"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
										},
										"type": "array"
									},
									"name": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									},
									"project": {
										"$ref": "#/components/schemas/IdDocument_mongoose.Types.ObjectId_"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/expenseReport/reviewCompleted": {
			"post": {
				"operationId": "PostReviewCompleted",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/ExpenseReport_mongoose.Types.ObjectId.binary_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"examine/expenseReport"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"bookingRemark": {
										"type": "string",
										"nullable": true
									},
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/expenseReport/underExamination": {
			"post": {
				"operationId": "PostAnyUnderExamination",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"examine/expenseReport"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/examine/expenseReport/report": {
			"get": {
				"operationId": "GetReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"examine/expenseReport"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/expenseReport": {
			"get": {
				"operationId": "GetBookable",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_ExpenseReport__id.binary_-or-ExpenseReport__id.binary_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"book/expenseReport"
						]
					},
					{
						"httpBearer": [
							"book/expenseReport"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"addUp",
									"advances",
									"category",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"expenses"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/expenseReport/report": {
			"get": {
				"operationId": "GetBookableReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"book/expenseReport"
						]
					},
					{
						"httpBearer": [
							"book/expenseReport"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/expenseReport/booked": {
			"post": {
				"operationId": "PostBooked",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										},
										"result": {
											"items": {
												"properties": {
													"reason": {},
													"status": {
														"type": "string",
														"enum": [
															"rejected",
															"fulfilled"
														]
													}
												},
												"required": [
													"reason",
													"status"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"message",
										"result"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Expense Report"
				],
				"security": [
					{
						"cookieAuth": [
							"book/expenseReport"
						]
					},
					{
						"httpBearer": [
							"book/expenseReport"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/IdDocument_string_"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/documentFile": {
			"get": {
				"operationId": "GetOwn",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Document File"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Document File"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/examine/documentFile": {
			"get": {
				"operationId": "GetAny",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": [
							"user",
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/travel"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/expenseReport"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"security": [
					{
						"cookieAuth": [
							"user",
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/travel"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/expenseReport"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/displaySettings": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/DisplaySettings__id_"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Display Settings"
				],
				"security": [],
				"parameters": []
			}
		},
		"/admin/displaySettings": {
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/DisplaySettings_mongoose.Types.ObjectId_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Display Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_IDisplaySettings_mongoose.Types.ObjectId__"
							}
						}
					}
				}
			}
		},
		"/admin/displaySettings/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Display Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/currency": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Currency-or-Currency-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Currency"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"_id",
									"subunit",
									"symbol",
									"flag"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/currency": {
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Currency"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Currency"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_ICurrency_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Currency"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/CurrencyCode"
						}
					}
				]
			}
		},
		"/admin/currency/bulk": {
			"post": {
				"operationId": "PostMany",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/Currency"
											},
											"type": "array"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Currency"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/SetterBody_ICurrency_"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/admin/currency/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Currency"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/country": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Country-or-Country-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Country"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"_id",
									"name",
									"needsA1Certificate",
									"alias",
									"flag",
									"currency",
									"lumpSums",
									"lumpSumsFrom"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/specialLumpSums": {
			"get": {
				"operationId": "GetSpecialLumpSums",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"properties": {},
											"additionalProperties": {
												"items": {
													"type": "string"
												},
												"type": "array"
											},
											"type": "object"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Country"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/admin/country": {
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Country"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Country"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_ICountry_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Country"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/CountryCode"
						}
					}
				]
			}
		},
		"/admin/country/bulk": {
			"post": {
				"operationId": "PostMany",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/Country"
											},
											"type": "array"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Country"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/SetterBody_ICountry_"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/admin/country/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Country"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/admin/connectionSettings": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/ConnectionSettings__id_"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Connection Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/ConnectionSettings_mongoose.Types.ObjectId_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Connection Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IConnectionSettings"
							}
						}
					}
				}
			}
		},
		"/admin/connectionSettings/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Connection Settings"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/category": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Category__id_-or-Category__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Category"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"style",
									"isDefault",
									"_id"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/category": {
			"post": {
				"operationId": "Post",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Category_mongoose.Types.ObjectId_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Category"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SetterBody_ICategory_mongoose.Types.ObjectId__"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Category"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/admin/category/bulk": {
			"post": {
				"operationId": "PostMany",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/Category_mongoose.Types.ObjectId_"
											},
											"type": "array"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Category"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/SetterBody_ICategory_mongoose.Types.ObjectId__"
								},
								"type": "array"
							}
						}
					}
				}
			}
		},
		"/admin/category/form": {
			"get": {
				"operationId": "GetForm",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Category"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					},
					{
						"httpBearer": [
							"admin"
						]
					}
				],
				"parameters": []
			}
		},
		"/auth/ldapauth": {
			"post": {
				"operationId": "Ldapauth",
				"responses": {
					"204": {
						"description": "No content"
					},
					"501": {
						"description": "This Authentication Method has been disabled by display settings."
					}
				},
				"description": "Provides the authentication cookie.",
				"summary": "Login using LDAP",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"username": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"username"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/microsoft": {
			"get": {
				"operationId": "Microsoft",
				"responses": {
					"302": {
						"description": "Redirecting to Microsoft"
					},
					"501": {
						"description": "This Authentication Method has been disabled by display settings."
					}
				},
				"summary": "Redirecting to Microsoft login",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "redirect",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/microsoft/callback": {
			"get": {
				"operationId": "MicrosoftCallback",
				"responses": {
					"302": {
						"description": "Redirecting to Frontend"
					},
					"501": {
						"description": "This Authentication Method has been disabled by display settings."
					}
				},
				"description": "Provides the authentication cookie.",
				"summary": "Microsoft login endpoint",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/magiclogin": {
			"post": {
				"operationId": "Magiclogin",
				"responses": {
					"200": {
						"description": ""
					},
					"501": {
						"description": "This Authentication Method has been disabled by display settings."
					}
				},
				"description": "Send a magiclogin email to the destination email address.",
				"summary": "Send login email",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"redirect": {
										"type": "string"
									},
									"destination": {
										"type": "string"
									}
								},
								"required": [
									"destination"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/magiclogin/callback": {
			"get": {
				"operationId": "MagicloginCallback",
				"responses": {
					"302": {
						"description": "Redirecting to Frontend"
					},
					"501": {
						"description": "This Authentication Method has been disabled by display settings."
					}
				},
				"description": "Provides the authentication cookie.",
				"summary": "Email login endpoint",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/oidc": {
			"get": {
				"operationId": "Oidc",
				"responses": {
					"302": {
						"description": "Redirecting to OIDC Provider"
					},
					"501": {
						"description": "This Authentication Method has been disabled by display settings."
					}
				},
				"summary": "Redirecting to OIDC login",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "redirect",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/oidc/callback": {
			"get": {
				"operationId": "OidcCallback",
				"responses": {
					"302": {
						"description": "Redirecting to Frontend"
					},
					"501": {
						"description": "This Authentication Method has been disabled by display settings."
					}
				},
				"summary": "OIDC login callback endpoint",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/logout": {
			"delete": {
				"operationId": "Logout",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Logout and delete session",
				"summary": "Logout",
				"tags": [
					"Auth"
				],
				"security": [
					{
						"cookieAuth": []
					}
				],
				"parameters": []
			}
		},
		"/auth/authenticated": {
			"get": {
				"operationId": "Authenticated",
				"responses": {
					"204": {
						"description": "No content"
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"description": "Empty method",
				"summary": "Check if request is authenticated",
				"tags": [
					"Auth"
				],
				"security": [
					{
						"cookieAuth": []
					},
					{
						"httpBearer": []
					}
				],
				"parameters": []
			}
		},
		"/approvedTravel": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_ApprovedTravel__id_-or-ApprovedTravel__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Travel",
					"Approved Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/travel"
						]
					},
					{
						"httpBearer": [
							"approve/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"reason",
									"destinationPlace",
									"startDate",
									"endDate",
									"claimSpouseRefund",
									"fellowTravelersNames",
									"traveler",
									"reportId",
									"organisationId",
									"appliedForOn",
									"approvedBy",
									"approvedOn"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/approvedTravel/report": {
			"get": {
				"operationId": "GetReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Travel",
					"Approved Travel"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/travel"
						]
					},
					{
						"httpBearer": [
							"approve/travel"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "from",
						"required": true,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "to",
						"required": true,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "organisationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/advance": {
			"get": {
				"operationId": "GetOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Advance__id_-or-Advance__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"name",
									"budget",
									"project",
									"balance",
									"reason",
									"state",
									"settledOn",
									"_id",
									"offsetAgainst"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/advance/appliedFor": {
			"post": {
				"operationId": "PostOwnInWork",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AdvanceApplication"
							}
						}
					}
				}
			}
		},
		"/advance/report": {
			"get": {
				"operationId": "GetReportForOwn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					},
					{
						"httpBearer": [
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/examine/advance": {
			"get": {
				"operationId": "GetForExamineReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Advance__id_-or-Advance__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"user",
							"approve/travel"
						]
					},
					{
						"httpBearer": [
							"user",
							"approve/travel"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/travel"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/travel"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/expenseReport"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/expenseReport"
						]
					},
					{
						"cookieAuth": [
							"user",
							"examine/healthCareCost"
						]
					},
					{
						"httpBearer": [
							"user",
							"examine/healthCareCost"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"name",
									"budget",
									"project",
									"balance",
									"reason",
									"state",
									"settledOn",
									"_id",
									"offsetAgainst"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/approve/advance": {
			"get": {
				"operationId": "GetToApprove",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Advance__id_-or-Advance__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/advance"
						]
					},
					{
						"httpBearer": [
							"approve/advance"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"name",
									"budget",
									"project",
									"balance",
									"reason",
									"state",
									"settledOn",
									"_id",
									"offsetAgainst"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/approve/advance/approved": {
			"post": {
				"operationId": "PostAnyBackApproved",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Advance_mongoose.Types.ObjectId_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/advance"
						]
					},
					{
						"httpBearer": [
							"approve/advance"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"anyOf": [
									{
										"allOf": [
											{
												"$ref": "#/components/schemas/AdvanceApplication"
											},
											{
												"properties": {
													"bookingRemark": {
														"type": "string",
														"nullable": true
													},
													"owner": {
														"$ref": "#/components/schemas/IdDocument"
													}
												},
												"required": [
													"owner"
												],
												"type": "object"
											}
										]
									},
									{
										"properties": {
											"bookingRemark": {
												"type": "string",
												"nullable": true
											},
											"comment": {
												"type": "string"
											},
											"_id": {
												"type": "string"
											}
										},
										"required": [
											"_id"
										],
										"type": "object"
									}
								]
							}
						}
					}
				}
			}
		},
		"/approve/advance/rejected": {
			"post": {
				"operationId": "PostAnyRejected",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"anyOf": [
												{
													"$ref": "#/components/schemas/TravelSimple__id_"
												},
												{
													"$ref": "#/components/schemas/ExpenseReportSimple__id_"
												},
												{
													"$ref": "#/components/schemas/HealthCareCostSimple__id_"
												},
												{
													"$ref": "#/components/schemas/Advance__id_"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/advance"
						]
					},
					{
						"httpBearer": [
							"approve/advance"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"comment": {
										"type": "string"
									},
									"_id": {
										"type": "string"
									}
								},
								"required": [
									"_id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/approve/advance/offset": {
			"post": {
				"operationId": "Offset",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"$ref": "#/components/schemas/Advance__id_"
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/advance"
						]
					},
					{
						"httpBearer": [
							"approve/advance"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"advanceId": {
										"$ref": "#/components/schemas/IdDocument"
									},
									"amount": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"advanceId",
									"amount"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/approve/advance/report": {
			"get": {
				"operationId": "GetReportForAny",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"approve/advance"
						]
					},
					{
						"httpBearer": [
							"approve/advance"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/advance": {
			"get": {
				"operationId": "GetBookable",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_Advance__id_-or-Advance__id_-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"book/advance"
						]
					},
					{
						"httpBearer": [
							"book/advance"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer",
							"minimum": 0
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"history",
									"historic",
									"name",
									"owner",
									"editor",
									"project",
									"comment",
									"bookingRemark",
									"comments",
									"state",
									"log",
									"createdAt",
									"updatedAt",
									"_id",
									"name",
									"budget",
									"project",
									"balance",
									"reason",
									"state",
									"settledOn",
									"_id",
									"offsetAgainst"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/advance/report": {
			"get": {
				"operationId": "GetBookableReport",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf": {
								"schema": {
									"type": "string",
									"format": "byte"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"book/advance"
						]
					},
					{
						"httpBearer": [
							"book/advance"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/book/advance/booked": {
			"post": {
				"operationId": "PostBooked",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										},
										"result": {
											"items": {
												"properties": {
													"reason": {},
													"status": {
														"type": "string",
														"enum": [
															"rejected",
															"fulfilled"
														]
													}
												},
												"required": [
													"reason",
													"status"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"message",
										"result"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Advance"
				],
				"security": [
					{
						"cookieAuth": [
							"book/advance"
						]
					},
					{
						"httpBearer": [
							"book/advance"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"items": {
									"$ref": "#/components/schemas/IdDocument_string_"
								},
								"type": "array"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}