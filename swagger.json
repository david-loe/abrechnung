{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Locale": {
				"type": "string",
				"enum": [
					"de",
					"en"
				]
			},
			"Currency": {
				"properties": {
					"name": {
						"properties": {
							"en": {
								"type": "string"
							},
							"de": {
								"type": "string"
							}
						},
						"required": [
							"en",
							"de"
						],
						"type": "object"
					},
					"_id": {
						"type": "string"
					},
					"subunit": {
						"type": "string",
						"nullable": true
					},
					"symbol": {
						"type": "string",
						"nullable": true
					},
					"flag": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CountrySimple": {
				"properties": {
					"name": {
						"properties": {
							"en": {
								"type": "string"
							},
							"de": {
								"type": "string"
							}
						},
						"required": [
							"en",
							"de"
						],
						"type": "object"
					},
					"alias": {
						"properties": {
							"en": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"de": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": [
							"de"
						],
						"type": "object"
					},
					"_id": {
						"type": "string"
					},
					"flag": {
						"type": "string",
						"nullable": true
					},
					"currency": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Currency"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"name",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"mongoose.Types.ObjectId": {
				"type": "string"
			},
			"HealthInsurance": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"name",
					"email",
					"_id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Organisation": {
				"properties": {
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"subfolderPath": {
						"type": "string"
					},
					"bankDetails": {
						"type": "string",
						"nullable": true
					},
					"companyNumber": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"_id",
					"subfolderPath"
				],
				"type": "object",
				"additionalProperties": false
			},
			"mongoose.Types.Buffer": {
				"properties": {
					"data": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"type": {
						"type": "string",
						"enum": [
							"Buffer"
						],
						"nullable": false
					}
				},
				"required": [
					"data",
					"type"
				],
				"type": "object"
			},
			"DocumentFileType": {
				"type": "string",
				"enum": [
					"image/jpeg",
					"image/png",
					"application/pdf"
				]
			},
			"DocumentFile": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/mongoose.Types.Buffer"
					},
					"owner": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"type": {
						"$ref": "#/components/schemas/DocumentFileType"
					},
					"name": {
						"type": "string"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					}
				},
				"required": [
					"data",
					"owner",
					"type",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Token": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"createdAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						]
					},
					"files": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile"
						},
						"type": "array"
					}
				},
				"required": [
					"_id",
					"createdAt",
					"files"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"properties": {
							"familyName": {
								"type": "string"
							},
							"givenName": {
								"type": "string"
							}
						},
						"required": [
							"familyName",
							"givenName"
						],
						"type": "object"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"fk": {
						"properties": {
							"magiclogin": {
								"type": "string",
								"nullable": true
							},
							"ldapauth": {
								"type": "string",
								"nullable": true
							},
							"microsoft": {
								"type": "string",
								"nullable": true
							}
						},
						"type": "object"
					},
					"access": {
						"properties": {
							"user": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"confirm/healthCareCost": {
								"type": "boolean"
							},
							"admin": {
								"type": "boolean"
							}
						},
						"required": [
							"user",
							"approve/travel",
							"examine/travel",
							"examine/expenseReport",
							"examine/healthCareCost",
							"confirm/healthCareCost",
							"admin"
						],
						"type": "object"
					},
					"loseAccessAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"settings": {
						"properties": {
							"organisation": {
								"allOf": [
									{
										"$ref": "#/components/schemas/Organisation"
									}
								],
								"nullable": true
							},
							"insurance": {
								"allOf": [
									{
										"$ref": "#/components/schemas/HealthInsurance"
									}
								],
								"nullable": true
							},
							"lastCountries": {
								"items": {
									"$ref": "#/components/schemas/CountrySimple"
								},
								"type": "array"
							},
							"lastCurrencies": {
								"items": {
									"$ref": "#/components/schemas/Currency"
								},
								"type": "array"
							},
							"language": {
								"$ref": "#/components/schemas/Locale"
							}
						},
						"required": [
							"lastCountries",
							"lastCurrencies",
							"language"
						],
						"type": "object"
					},
					"vehicleRegistration": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile"
						},
						"type": "array",
						"nullable": true
					},
					"token": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Token"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"email",
					"name",
					"_id",
					"fk",
					"access",
					"settings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Meta": {
				"properties": {
					"count": {
						"type": "number",
						"format": "double"
					},
					"page": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					},
					"countPages": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"count",
					"page",
					"limit",
					"countPages"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GETResponse_User-or-User-Array_": {
				"properties": {
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"items": {
									"$ref": "#/components/schemas/User"
								},
								"type": "array"
							}
						]
					},
					"meta": {
						"$ref": "#/components/schemas/Meta"
					}
				},
				"required": [
					"data",
					"meta"
				],
				"type": "object",
				"additionalProperties": false
			},
			"_id": {
				"type": "string",
				"pattern": "^[0-9a-fA-F]{24}$"
			},
			"IUser": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"properties": {
							"familyName": {
								"type": "string"
							},
							"givenName": {
								"type": "string"
							}
						},
						"required": [
							"familyName",
							"givenName"
						],
						"type": "object"
					},
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"fk": {
						"properties": {
							"magiclogin": {
								"type": "string",
								"nullable": true
							},
							"ldapauth": {
								"type": "string",
								"nullable": true
							},
							"microsoft": {
								"type": "string",
								"nullable": true
							}
						},
						"type": "object"
					},
					"access": {
						"properties": {
							"user": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"confirm/healthCareCost": {
								"type": "boolean"
							},
							"admin": {
								"type": "boolean"
							}
						},
						"required": [
							"user",
							"approve/travel",
							"examine/travel",
							"examine/expenseReport",
							"examine/healthCareCost",
							"confirm/healthCareCost",
							"admin"
						],
						"type": "object"
					},
					"loseAccessAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"settings": {
						"properties": {
							"organisation": {
								"allOf": [
									{
										"$ref": "#/components/schemas/Organisation"
									}
								],
								"nullable": true
							},
							"insurance": {
								"allOf": [
									{
										"$ref": "#/components/schemas/HealthInsurance"
									}
								],
								"nullable": true
							},
							"lastCountries": {
								"items": {
									"$ref": "#/components/schemas/CountrySimple"
								},
								"type": "array"
							},
							"lastCurrencies": {
								"items": {
									"$ref": "#/components/schemas/Currency"
								},
								"type": "array"
							},
							"language": {
								"$ref": "#/components/schemas/Locale"
							}
						},
						"required": [
							"lastCountries",
							"lastCurrencies",
							"language"
						],
						"type": "object"
					},
					"vehicleRegistration": {
						"items": {
							"$ref": "#/components/schemas/DocumentFile"
						},
						"type": "array",
						"nullable": true
					},
					"token": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Token"
							}
						],
						"nullable": true
					}
				},
				"required": [
					"email",
					"name",
					"_id",
					"fk",
					"access",
					"settings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetterQuery_IUser_": {
				"properties": {
					"limit": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"minimum": 1
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"additionalFields": {
						"items": {
							"type": "string",
							"enum": [
								"email",
								"name",
								"_id",
								"fk",
								"access",
								"loseAccessAt",
								"settings",
								"vehicleRegistration",
								"token"
							],
							"nullable": false
						},
						"type": "array"
					},
					"filterJSON": {
						"type": "string",
						"format": "byte"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Required___id-mongoose.Types.ObjectId__": {
				"properties": {},
				"type": "object",
				"description": "Make all properties in T required"
			},
			"Document": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/_id"
					},
					{
						"properties": {
							"_id": {
								"$ref": "#/components/schemas/_id"
							}
						},
						"required": [
							"_id"
						],
						"type": "object"
					}
				]
			},
			"UserSettingsPost": {
				"properties": {
					"language": {
						"$ref": "#/components/schemas/Locale"
					},
					"lastCurrencies": {
						"items": {
							"$ref": "#/components/schemas/Currency"
						},
						"type": "array"
					},
					"lastCountries": {
						"items": {
							"$ref": "#/components/schemas/CountrySimple"
						},
						"type": "array"
					},
					"insurance": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Document"
							}
						],
						"nullable": true
					},
					"organisation": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Document"
							}
						],
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"UserPost": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"properties": {
							"familyName": {
								"type": "string"
							},
							"givenName": {
								"type": "string"
							}
						},
						"required": [
							"familyName",
							"givenName"
						],
						"type": "object"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					},
					"fk": {
						"properties": {
							"magiclogin": {
								"type": "string",
								"nullable": true
							},
							"ldapauth": {
								"type": "string",
								"nullable": true
							},
							"microsoft": {
								"type": "string",
								"nullable": true
							}
						},
						"type": "object"
					},
					"access": {
						"properties": {
							"user": {
								"type": "boolean"
							},
							"approve/travel": {
								"type": "boolean"
							},
							"examine/travel": {
								"type": "boolean"
							},
							"examine/expenseReport": {
								"type": "boolean"
							},
							"examine/healthCareCost": {
								"type": "boolean"
							},
							"confirm/healthCareCost": {
								"type": "boolean"
							},
							"admin": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					"loseAccessAt": {
						"anyOf": [
							{
								"type": "string",
								"format": "date-time"
							},
							{
								"type": "string"
							}
						],
						"nullable": true
					},
					"settings": {
						"$ref": "#/components/schemas/UserSettingsPost"
					}
				},
				"required": [
					"email",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DeleteResult": {
				"properties": {
					"acknowledged": {
						"type": "boolean",
						"description": "Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined."
					},
					"deletedCount": {
						"type": "number",
						"format": "double",
						"description": "The number of documents that were deleted"
					}
				},
				"required": [
					"acknowledged",
					"deletedCount"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NativeDate": {
				"type": "string"
			},
			"Partial_UserSettingsPost_": {
				"properties": {
					"language": {
						"type": "string",
						"enum": [
							"de",
							"en"
						]
					},
					"lastCurrencies": {
						"items": {
							"$ref": "#/components/schemas/Currency"
						},
						"type": "array"
					},
					"lastCountries": {
						"items": {
							"$ref": "#/components/schemas/CountrySimple"
						},
						"type": "array"
					},
					"insurance": {
						"$ref": "#/components/schemas/Document"
					},
					"organisation": {
						"$ref": "#/components/schemas/Document"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"File": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/DocumentFileType"
					},
					"name": {
						"type": "string"
					},
					"data": {
						"type": "string",
						"format": "binary"
					},
					"_id": {
						"$ref": "#/components/schemas/_id"
					}
				},
				"required": [
					"type",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"cookieAuth": {
				"type": "apiKey",
				"name": "abrechnung",
				"in": "cookie",
				"scopes": {
					"user": "make requests",
					"approve/travel": "approve travel requests",
					"examine/travel": "examine travel expense requests",
					"examine/expenseReport": "examine expense report requests",
					"examine/healthCareCost": "examine healthcare cost requests",
					"confirm/healthCareCost": "confirm healthcare cost requests",
					"admin": "admin"
				}
			}
		}
	},
	"info": {
		"title": "abrechnung-backend",
		"version": "0.3.9",
		"contact": {}
	},
	"paths": {
		"/api/admin/user": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GETResponse_User-or-User-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Admin",
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"in": "query",
						"name": "_id",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/_id"
						}
					},
					{
						"in": "query",
						"name": "additionalFields",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"email",
									"name",
									"_id",
									"fk",
									"access",
									"loseAccessAt",
									"settings",
									"vehicleRegistration",
									"token"
								],
								"nullable": false
							}
						}
					},
					{
						"in": "query",
						"name": "filterJSON",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "PostUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/User"
												},
												{
													"$ref": "#/components/schemas/Required___id-mongoose.Types.ObjectId__"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Admin",
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserPost"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DeleteResult"
								}
							}
						}
					}
				},
				"tags": [
					"Admin",
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"admin"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "_id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/_id"
						}
					}
				]
			}
		},
		"/api/user": {
			"get": {
				"operationId": "GetMe",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {
											"$ref": "#/components/schemas/User"
										}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/user/token": {
			"get": {
				"operationId": "GetToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"data": {}
									},
									"required": [
										"data"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Upload",
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					}
				],
				"parameters": []
			},
			"delete": {
				"operationId": "DeleteToken",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Upload",
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "PostToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"updatedAt": {
															"$ref": "#/components/schemas/NativeDate"
														},
														"createdAt": {
															"$ref": "#/components/schemas/NativeDate"
														}
													},
													"required": [
														"updatedAt",
														"createdAt"
													],
													"type": "object"
												},
												{
													"properties": {
														"files": {
															"items": {
																"$ref": "#/components/schemas/mongoose.Types.ObjectId"
															},
															"type": "array"
														}
													},
													"required": [
														"files"
													],
													"type": "object"
												},
												{
													"properties": {
														"_id": {
															"$ref": "#/components/schemas/mongoose.Types.ObjectId"
														}
													},
													"required": [
														"_id"
													],
													"type": "object"
												},
												{
													"$ref": "#/components/schemas/Required___id-mongoose.Types.ObjectId__"
												}
											]
										},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Upload",
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/user/settings": {
			"post": {
				"operationId": "PostSettings",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_UserSettingsPost_"
							}
						}
					}
				}
			}
		},
		"/api/user/vehicleRegistration": {
			"post": {
				"operationId": "PostVehicleRegistration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {},
										"message": {
											"type": "string"
										}
									},
									"required": [
										"result",
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"cookieAuth": [
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"properties": {
									"vehicleRegistration": {
										"items": {
											"$ref": "#/components/schemas/File"
										},
										"type": "array"
									}
								},
								"required": [
									"vehicleRegistration"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/upload/new": {
			"get": {
				"operationId": "UploadPage",
				"responses": {
					"200": {
						"description": ""
					}
				},
				"tags": [
					"Upload"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "Upload",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Upload"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "tokenId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"properties": {
									"files": {
										"items": {
											"$ref": "#/components/schemas/File"
										},
										"type": "array"
									}
								},
								"required": [
									"files"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/ldapauth": {
			"post": {
				"operationId": "Ldapauth",
				"responses": {
					"204": {
						"description": "No content"
					},
					"501": {
						"description": "This Authentication Method has been disabled by .env settings."
					}
				},
				"description": "Provides the authentication cookie.",
				"summary": "Login using LDAP",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"username": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"username"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/microsoft": {
			"get": {
				"operationId": "Microsoft",
				"responses": {
					"302": {
						"description": "Redirecting to Microsoft"
					},
					"501": {
						"description": "This Authentication Method has been disabled by .env settings."
					}
				},
				"summary": "Redirecting to Microsoft login",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "redirect",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/microsoft/callback": {
			"get": {
				"operationId": "MicrosoftCallback",
				"responses": {
					"302": {
						"description": "Redirecting to Frontend"
					},
					"501": {
						"description": "This Authentication Method has been disabled by .env settings."
					}
				},
				"description": "Provides the authentication cookie.",
				"summary": "Microsoft login endpoint",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "state",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/magiclogin": {
			"post": {
				"operationId": "Magiclogin",
				"responses": {
					"200": {
						"description": ""
					},
					"501": {
						"description": "This Authentication Method has been disabled by .env settings."
					}
				},
				"description": "Send a magiclogin email to the destination email address.",
				"summary": "Send login email",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"redirect": {
										"type": "string"
									},
									"destination": {
										"type": "string"
									}
								},
								"required": [
									"destination"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/magiclogin/callback": {
			"get": {
				"operationId": "MagicloginCallback",
				"responses": {
					"302": {
						"description": "Redirecting to Frontend"
					},
					"501": {
						"description": "This Authentication Method has been disabled by .env settings."
					}
				},
				"description": "Provides the authentication cookie.",
				"summary": "Email login endpoint",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/logout": {
			"delete": {
				"operationId": "Logout",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Logout and delete session",
				"summary": "Logout",
				"tags": [
					"Authentication"
				],
				"security": [
					{
						"cookieAuth": []
					}
				],
				"parameters": []
			}
		},
		"/auth/authenticated": {
			"get": {
				"operationId": "Authenticated",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Empty method",
				"summary": "Check if request is authenticated",
				"tags": [
					"Authentication"
				],
				"security": [
					{
						"cookieAuth": []
					}
				],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}